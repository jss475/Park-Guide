{"version":3,"sources":["park_guide.gif","components/NavBar.jsx","components/SignUp.jsx","components/Login.jsx","components/TrailsCard.jsx","components/TrailsContainer.jsx","components/TrailPage.jsx","components/NewTrailForm.jsx","components/FoodCard.jsx","components/FoodContainer.jsx","components/FoodPage.jsx","components/NewFoodForm.jsx","components/LodgingCard.jsx","components/LodgingContainer.jsx","components/LodgingPage.jsx","components/NewLodgingForm.jsx","components/UserPage.jsx","park_guide.svg","yosemite1.jpg","yosemite2.jpg","great_smokey2.jpg","shenandoah.jpg","grand_canyon.jpg","zion.jpg","components/About.jsx","yosemite6.jpg","components/Yosemite.jsx","components/ItineraryGenerator.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","isLoggedIn","handleLSLoggedIn","useDisclosure","isOpen","onOpen","onClose","btnRef","React","useRef","history","useHistory","handleLogOut","a","fetch","method","push","className","ref","leftIcon","colorScheme","onClick","variant","position","top","right","m","placement","finalFocusRef","ml","mr","mb","as","ReactLink","to","src","logo","alt","h","defaultIndex","allowMultiple","flex","textAlign","pb","flexDirection","mt","SignUp","useState","errors","setErrors","handleSignUp","e","preventDefault","form","FormData","document","querySelector","body","req","ok","json","data","id","i","res","err_array","message","w","map","error","color","onSubmit","isRequired","name","placeholder","htmlFor","type","Login","handleLogin","err","TrailsCard","trail","mileage","route_type","difficulty","estimated_time","water","food","pictures","upvote","downvote","burgerIcon","GiHamburger","waterIcon","GiWaterDrop","pathname","useLocation","backgroundColor","borderColor","fontFamily","borderWidth","borderRadius","overflow","state","pl","pr","pt","p","display","alignItems","fontWeight","letterSpacing","fontSize","textTransform","lineHeight","noOfLines","flexWrap","BiUpvote","BiDownvote","TrailsContainer","allTrails","setAllTrails","useEffect","then","console","log","length","sort","b","parseInt","justifyContent","TrailPage","useParams","reviewAdded","setReviewAdded","proximity","elevation_gain","starting_elevation","starting_lat","starting_long","ending_lat","ending_long","user_trails","reviews","user","trailData","setTrailData","favClicked","setFavClicked","isLoaded","useLoadScript","googleMapsApiKey","process","zoom","center","lat","lng","mapContainerClassName","label","weatherData","setWeatherData","properties","forecast","w_req","periods","get_forecast","getWeatherData","weather","current_hour","Date","getHours","output","n","index","temp_low","filtered_output","filter","el","temp_low_filtered","pop","unshift","day","padding","icon","temperature","alreadyClicked","setAlreadyClicked","found","user_id","localStorage","getItem","find_ut","ut","findFirstTime","a_date","updated_at","configObj","headers","mode","JSON","stringify","trail_id","prev","filteredIndex","filter_id","filtered_data","mutable_trailData","splice","FaStar","FaRegStar","maxW","border","borderTop","target","reset","review","onChange","value","float","NewTrailForm","disabled_val","allInputs","setAllInputs","handleNewTrailSubmit","inputHr","setInputHr","inputMin","setInputMin","children","handleTimeInput","disabled","FoodCard","height","FoodContainer","allFoods","setAllFoods","restaurants","groceries","food_type","FoodPage","user_foods","foodData","setFoodData","getFood","latlong","setLatlong","address","added_plus","split","join","results","geometry","location","website","description","find_uf","uf","food_id","mutable_foodData","wrap","minH","maxH","href","isExternal","mx","style","NewFoodForm","handleNewFoodSubmit","url","test","LodgingCard","lodging","image","LodgingContainer","allLodging","setAllLodging","getLodging","LodgingPage","user_lodgings","lodgingData","setLodgingData","lodging_amenity","room_amenity","find_ul","ul","lodging_id","mutable_lodgingData","amenity","NewLodgingForm","checkedLAmenity","setCheckedLAmenity","checkedRAmenity","setCheckedRAmenity","handleNewLodgingSubmit","handleLodgingAmenityChange","includes","handleRoomAmenityChange","UserPage","userData","setUserData","handlePlaceClick","getUser","timeMessage","email","created_at","time_diff","days_since_created","Math","round","years","floor","days","user_foods_fav_filtered","user_lodgings_fav_filtered","user_trails_fav_filtered","user_foods_review_filter","user_lodgings_review_filter","user_trails_review_filter","size","templateColumns","gap","About","logo2","yosemite2","yosemite","shenandoah","great_smokey","grand_canyon","zion","Yosemite","elem","createElement","getContext","isCanvasSupported","c","getElementById","cw","width","ch","waterfall","_this","this","ctx","particles","particleRate","gravity","init","loop","clearRect","rand","rMi","rMa","random","Particle","newWidth","newHeight","x","y","vx","vy","hue","saturation","lightness","prototype","update","render","strokeStyle","beginPath","moveTo","lineTo","lineWidth","lineCap","stroke","renderBubble","fillStyle","arc","PI","fill","createParticles","removeParticles","updateParticles","renderParticles","clearCanvas","globalCompositeOperation","fillRect","loopIt","requestAnimationFrame","lastTime","vendors","window","cancelAnimationFrame","callback","element","currTime","getTime","timeToCall","max","setTimeout","clearTimeout","setupRAF","yosemite1","FaMountain","ItineraryGenerator","handleItineraryInput","filtered_food","filtered_trail","App","setIsLoggedIn","val","setItem","removeItem","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.b8f80be3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/park_guide.edff78ee.gif\";","import React from 'react';\nimport {Link as ReactLink, useHistory} from 'react-router-dom';\nimport {\n    Drawer,\n    DrawerBody,\n    DrawerFooter,\n    DrawerHeader,\n    DrawerOverlay,\n    DrawerContent,\n    DrawerCloseButton,\n    Button,\n    Link,\n    Accordion,\n    AccordionItem,\n    AccordionButton,\n    AccordionPanel,\n    AccordionIcon,\n    Box,\n    Flex,\n    Image\n  } from '@chakra-ui/react'\nimport { useDisclosure } from '@chakra-ui/react'\nimport {GiHamburgerMenu} from 'react-icons/gi'\nimport '../navbar.css'\nimport logo from '../park_guide.gif'\n// import {Link as ReachLink} from '@reach/router'\n\nfunction NavBar({isLoggedIn, handleLSLoggedIn}){\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const btnRef = React.useRef()\n\n  //set to push page to different page\n  let history = useHistory()\n  //handle the button click for the signup event\n  function handleSignUpClick(){\n    history.push('/signup')\n  }\n\n  //handle the sing in button click\n  function handleLoginClick(){\n    history.push('/login')\n  }\n\n  //handle the logout click\n  const handleLogOut= async () => {\n    await fetch('/logout', {\n      method: \"DELETE\"\n    });\n    handleLSLoggedIn(false)\n    history.push(\"/about\")\n  }\n\n  //handle the add a trail button click\n  function handleAddTrailClick(){\n    history.push('/yosemite/trails/new')\n    onClose()\n  }\n\n  //handle the add a food button click\n  function handleAddFoodClick(){\n    history.push('/yosemite/food/new')\n    onClose()\n  }\n\n    //handle the add a lodging button click\n    function handleAddLodgingClick(){\n      history.push('/yosemite/lodging/new')\n      onClose()\n    }\n\n  return (\n    <Box >\n      <Button className=\"navbar-text\" ref={btnRef} leftIcon={<GiHamburgerMenu />}colorScheme='teal' onClick={onOpen} variant='outline' position=\"fixed\" top=\"0\" right = \"0\" m='4'>\n        Open\n      </Button>\n      <Drawer\n        isOpen={isOpen}\n        placement='right'\n        onClose={onClose}\n        finalFocusRef={btnRef}\n      >\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <DrawerHeader ml=\"auto\" mr=\"auto\" mb=\"-30px\">\n            <Link as={ReactLink} to='/about' onClick={onClose}>\n              <Image src={logo} alt=\"Logo\" h=\"150px\"/>\n            </Link>\n          </DrawerHeader>\n          {/* This is where I put in the links */}\n          {/* this is when logged in you have the me page show up */}\n          <DrawerBody>\n            {isLoggedIn ? \n              <Box mb=\"15px\">\n                  <Link className=\"navbar-text\" as={ReactLink} to='/me' onClick={onClose}>\n                    Me!\n                  </Link>\n              </Box>\n             : null }\n            {/* <Box>\n              <Link as={ReactLink} to='/about' className=\"navbar-about\" onClick={onClose}>\n                About\n              </Link>\n            </Box> */}\n            \n            <h1 className=\"navbar-title\">National Parks</h1>\n            <Accordion defaultIndex={[0]} allowMultiple >\n              <AccordionItem>\n                <h2>\n                  <AccordionButton>\n                    <Box flex='1' textAlign='left'>\n                      <Link className=\"navbar-text\" as={ReactLink} to='/yosemite'>\n                        Yosemite\n                      </Link>\n                    </Box>\n                    <AccordionIcon />\n                  </AccordionButton>\n                </h2>\n                <AccordionPanel pb={4}>\n                  <Link className=\"navbar-text\" as={ReactLink} to='/yosemite/lodging' onClick={onClose}>\n                    Lodging\n                  </Link>\n       \n                </AccordionPanel>\n                <AccordionPanel pb={4}>\n                  <Link className=\"navbar-text\" as={ReactLink} to='/yosemite/food' onClick={onClose}>\n                      Food\n                  </Link>\n                </AccordionPanel>\n                <AccordionPanel pb={4}>\n                  <Link className=\"navbar-text\" as={ReactLink} to='/yosemite/trails' onClick={onClose}>\n                      Trails\n                  </Link>\n                </AccordionPanel>\n              </AccordionItem>\n            </Accordion>\n          \n\n          \n          {/* When logged in you can add stuff */}\n          {/* got rid of drawer body encapsulating the Flexs, can always add back in */}\n          {isLoggedIn ? \n          \n            <Flex flexDirection=\"column\" mt=\"20px\">\n              <Button className=\"navbar-text\" onClick={handleAddTrailClick}>Add a Trail!</Button>\n              <Button className=\"navbar-text\" onClick={handleAddLodgingClick} mt=\"10px\">Add Lodging!</Button>\n              <Button className=\"navbar-text\" onClick = {handleAddFoodClick} mt=\"10px\">Add Food!</Button>\n            </Flex>\n          :\n          null\n          }\n          </DrawerBody>\n          <DrawerFooter>\n            {!isLoggedIn ? \n              <>\n                  <Button className=\"navbar-text\" colorScheme='blue' mr={3} onClick={()=> {\n                    handleLoginClick()\n                    onClose()\n                  }}>Sign In</Button>\n                  <Button className=\"navbar-text\" colorScheme='blue' mr={3} onClick={()=> {\n                    handleSignUpClick()\n                    onClose()\n                  }}>\n                  Sign Up\n                  </Button> \n              </> :\n                <Button className=\"navbar-text\" variant='outline' mr={3} onClick={()=> {\n                  onClose()\n                  handleLogOut()\n                  }}>\n                  Logout\n                </Button>\n          }\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </Box>\n  )\n}\n\nexport default NavBar","import React, {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport { Input, Button, FormControl, FormLabel, FormHelperText, Box, Text, Heading} from '@chakra-ui/react'\n\n\nfunction SignUp({handleLSLoggedIn}){\n\n    //set an error for when the user tries to sign up\n    const [errors, setErrors] = useState([])\n    let history = useHistory()\n    \n    //handle the signup and sending a post request to the server\n    const handleSignUp = async (e) => {\n        e.preventDefault()\n\n        let form = new FormData(document.querySelector(\"#signup-form\"))\n\n        let req = await fetch(\"/signup\", {\n            method: \"POST\",\n            body: form\n        })\n  \n        if(req.ok){\n            let data = await req.json()\n            handleLSLoggedIn(true,data.id)\n            history.push(\"/about\")\n        }else {\n            let res = await req.json()\n            let err_array = []\n\n            for (let i in res.errors) {\n                let message = `${i}: ${res.errors[i]}`;\n                err_array.push(message);\n            }\n            setErrors(err_array)\n        }\n    }\n    return(\n        <Box mt=\"80px\" w=\"50%\" ml=\"auto\" mr=\"auto\">  \n            <Heading textAlign=\"center\">Sign Up</Heading>\n            {errors.map(error => <Text color=\"red\">{error}</Text>)}\n            <form id=\"signup-form\" onSubmit={handleSignUp}>\n                <FormControl isRequired>\n                    <FormLabel>Name</FormLabel>\n                    <Input name=\"name\" placeholder=\"Enter Your Name\"/>\n                </FormControl>\n                <FormControl isRequired>\n                    <FormLabel htmlFor=\"email\">Email</FormLabel>\n                    <Input name=\"email\" placeholder=\"Enter your Email\"/>\n                </FormControl>\n                <FormControl isRequired>\n                    <FormLabel>Password</FormLabel>\n                    <Input name = \"password\" type=\"password\" placeholder=\"Enter your Password\"/>\n\n                </FormControl>\n                <FormControl isRequired>\n                    <FormLabel>Password Confirmation</FormLabel>\n                    <Input name = \"password_confirmation\" type=\"password\" placeholder=\"Confirm your Password\"/>\n                    <FormHelperText>Must be minimum 8 characters</FormHelperText>\n                    <FormHelperText>Must contain at least 1 uppercase</FormHelperText>\n                    <FormHelperText>Must contain at least 1 lowercase</FormHelperText>\n                    <FormHelperText>Must contain a special character</FormHelperText>\n                    <FormHelperText>Must contain at least 1 number</FormHelperText>\n                </FormControl>\n                <Button mt=\"15px\" type=\"submit\">Submit</Button>\n            </form>\n        </Box>\n    )\n}\n\nexport default SignUp","import React, {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport { Input, Button, Box, FormControl, FormLabel, Heading, Text } from '@chakra-ui/react'\n\nfunction Login({handleLSLoggedIn}){\n\n    //set an errors state to output the error one gets when trying to login\n    const [errors, setErrors] = useState([])\n    let history = useHistory()\n    \n\n    //handle the login and send a post request to the server\n    const handleLogin = async (e) => {\n        e.preventDefault()\n\n        let form = new FormData(document.querySelector(\"#login-form\"))\n\n        let req = await fetch(\"/login\", {\n            method: \"POST\",\n            body: form\n        })\n\n        if(req.ok){\n            let data = await req.json()\n            handleLSLoggedIn(true,data.id)\n            history.push(\"/about\")\n        }else {\n            let err = await req.json();\n            setErrors(err.error);\n        }\n        \n    }\n    return(\n        <Box mt=\"80px\" w=\"50%\" ml=\"auto\" mr=\"auto\">\n            <Heading textAlign=\"center\">Login</Heading>\n            <Text color=\"red\">{errors}</Text>\n            <form id=\"login-form\" onSubmit={handleLogin}>\n                <FormControl>\n                    <FormLabel>Email</FormLabel>\n                    <Input name=\"email\" placeholder=\"Enter your email\"/>\n                </FormControl>\n                <FormControl>\n                    <FormLabel>Password</FormLabel>\n                    <Input name = \"password\" type = \"password\" placeholder=\"Enter your password\"/>\n                </FormControl>\n                <Button mt = \"15px\" type=\"submit\">Submit</Button>\n            </form>\n        </Box>\n    )\n}\n\nexport default Login","\nimport { Box, Image, Icon, Flex, Text} from '@chakra-ui/react'\nimport {GiHamburger, GiWaterDrop} from 'react-icons/gi'\nimport {useHistory, useLocation} from 'react-router-dom'\nimport {BiUpvote, BiDownvote} from 'react-icons/bi'\n\n\n\nfunction TrailsCard({trail}) {\n\n    const {id, name, mileage, route_type, difficulty, estimated_time, water, food, pictures, upvote, downvote} = trail\n\n\n    //create burger icons for number of foods\n    let burgerIcon = []\n    for(let i = 0; i < food; i++){\n        burgerIcon.push(<Icon as={GiHamburger} />)\n    }\n    \n    //create water icons for number of water needed (in L's)\n    let waterIcon = []\n    for(let i=0; i < water; i++){\n        waterIcon.push(<Icon as={GiWaterDrop} />)\n    }\n\n    //handle click on box to send to individual trail page\n\n    //initialize use history\n    let history = useHistory()\n    const {pathname} = useLocation()\n    function handleTrailCardClick(){\n        if (pathname !== `/yosemite/trails/${id}`){\n            history.push({pathname: `/yosemite/trails/${id}`,\n                          state: {\n                            id: id\n                          }\n        })\n        }\n    }\n\n      return (\n        <Box w=\"calc(100% * (1/4) - 25px - 20px)\" backgroundColor=\"white\" borderColor=\"black\" fontFamily=\"Lato\" borderWidth='1px' borderRadius='lg' overflow='hidden' m='5' onClick={handleTrailCardClick}>\n          <Image src={pictures[0]} alt=\"Picture of trail\" w=\"100%\" pl=\"10px\" pr=\"10px\" pt=\"10px\" borderRadius=\"20px\"/>\n            <Box p='6'>\n                {/* difficult + route_type + estimate_time */}\n                <Box display='flex' alignItems='baseline'>\n                    <Box\n                        color='gray.500'\n                        fontWeight='semibold'\n                        letterSpacing='wide'\n                        fontSize='sm'\n                        textTransform='uppercase'\n                        ml='0'\n                    >\n                        {difficulty} &bull; {route_type} &bull; {estimated_time} ({mileage} mi)\n                    </Box>\n                </Box>\n                {/* title of the card */}\n                <Box\n                    mt='1'\n                    fontWeight='semibold'\n                    as='h4'\n                    lineHeight='tight'\n                    noOfLines={1}\n                    fontFamily=\"Raleway\"\n                    >\n                    {name}\n                </Box>\n                <Box\n                    mt='1'\n                    lineHeight='tight'\n                    noOfLines={1}\n                    >\n                    {burgerIcon} &bull; {waterIcon}\n                </Box>\n                <Flex \n                    flexWrap=\"inline\"\n                    color='gray.500'\n                    fontWeight='semibold'\n                    letterSpacing='wide'\n                    fontSize='sm'\n                    textTransform='uppercase'\n                    ml='0'\n                >\n                    <Flex>\n                        <Icon as={BiUpvote} mt=\"4px\"/>\n                        <Text>{upvote}</Text>\n                    </Flex>\n                    <Flex>\n                        <Icon as={BiDownvote} ml = \"15px\" mt=\"4px\"/>\n                        <Text >{downvote}</Text>\n                    </Flex>\n                    \n                </Flex>\n\n                {/*  */}\n            </Box>\n        </Box>\n      )\n}\n\nexport default TrailsCard","import { useEffect, useState } from \"react\"\nimport { Flex, Heading} from '@chakra-ui/react'\nimport TrailsCard from \"./TrailsCard\"\n\nfunction TrailsContainer() {\n    \n    //set state for fetching all the trails\n    const [allTrails, setAllTrails] = useState([])\n\n    useEffect(()=> {\n        fetch(\"/trails\")\n            .then(res => res.json())\n            .then(data => setAllTrails(data))\n    },[])\n\n    console.log(allTrails)\n    //create filter based off of upvote\n    if(allTrails.length > 0){\n        allTrails.sort(function(a,b) {\n            return parseInt(b.upvote) - parseInt(a.upvote)\n        })\n    }\n    return(\n        <>\n            <Heading mt=\"40px\" ml=\"25px\" fontFamily=\"Raleway\">Trails at Yosemite!</Heading>\n            <Flex flexWrap=\"wrap\" justifyContent=\"left\" >\n                {allTrails.map(trail => {\n                    return <TrailsCard key={trail.id} trail={trail}/>\n                })}\n            </Flex>\n        </>\n    )\n}\n\nexport default TrailsContainer","import { useState, useEffect } from \"react\"\nimport {useParams, useHistory} from 'react-router-dom'\nimport { Text, Image, Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    TableContainer,\n    Flex,\n    Stat,\n    StatLabel,\n    StatNumber,\n    StatHelpText,\n    StatArrow,\n    StatGroup,\n    Icon,\n    Divider,\n    Box,\n    Avatar,\n    Spacer,\n    FormControl, FormLabel, Textarea, Button, Heading\n} from \"@chakra-ui/react\"\nimport {GiHamburger, GiWaterDrop} from 'react-icons/gi'\nimport {BiUpvote, BiDownvote} from 'react-icons/bi'\nimport {GoogleMap, useLoadScript, Marker} from \"@react-google-maps/api\"\nimport '../trailpage.css'\nimport {FaStar, FaRegStar} from 'react-icons/fa'\n\n//fix upvote and downvote backend\n\nfunction TrailPage({isLoggedIn}){\n    //get pathname to retrieve the ID of the trail that was clicked\n    const { id } = useParams()\n    // let trailId = pathname[pathname.length-1]\n\n    //set usehistory to push\n    const history = useHistory()\n    //review added state\n    const [reviewAdded, setReviewAdded] = useState()\n    //create state to take in trail data\n    const [trailData, setTrailData] = useState({\n        id: '',\n        name: '',\n        proximity: '',\n        mileage: '', \n        elevation_gain: '', \n        starting_elevation: '', \n        starting_lat: 80, \n        starting_long: 80, \n        ending_lat: '', \n        ending_long: '', \n        route_type: '', \n        difficulty: '', \n        estimated_time: '', \n        water: '', \n        food: '', \n        pictures: [],\n        upvote: '',\n        downvote: '',\n        user_trails: [{reviews: '', user: {name: '', id: ''}, trail: {id: ''}}]\n    })\n\n    //set state for clicking the favorite button\n    const [favClicked, setFavClicked] = useState(false)\n\n    //useParams for id\n    //pull the trail data for just the one trail\n    useEffect(()=> {\n        fetch(`/trails/${id}`)\n            .then(res => res.json())\n            .then(data => setTrailData(data))\n    },[id])\n\n    //hide the API key for google maps\n    const {isLoaded} = useLoadScript({googleMapsApiKey: process.env.REACT_APP_NEXT_PUBLIC_GOOGLE_MAPS_API_KEY})\n\n    //refactor the trail data\n    const {name, proximity, mileage, elevation_gain, starting_elevation, starting_lat, starting_long, ending_lat, ending_long, route_type, difficulty, estimated_time, water, food, pictures, upvote, downvote, user_trails} = trailData\n\n    //creating the google map\n    let map\n    if(!isLoaded){\n        map = <div>Loading...</div>\n    }else{\n        // debugger\n        map = <GoogleMap zoom={13} center={{lat: starting_lat, lng: starting_long}} mapContainerClassName=\"map-container\">\n\n            <Marker position={{lat: starting_lat, lng: starting_long}} label=\"SL\"  />\n        </GoogleMap>\n    }\n\n    ///////////////////////  WEATHER API ////////////////////////////\n\n    const [weatherData, setWeatherData] = useState([])\n    useEffect(() => {\n        const getWeatherData = async() => {\n            let req = await fetch(`https://api.weather.gov/points/${starting_lat},${starting_long}`);\n            console.log(req)\n            if(req.ok){\n                let res = await req.json()\n                // console.log(res)\n                const get_forecast = async() => {\n                    let w_req = await fetch(res.properties.forecast)    \n                \n                    if(w_req.ok){\n                        let data = await w_req.json()\n                        setWeatherData(data.properties.periods)\n                    }\n                }\n                get_forecast()\n            }\n        }\n        if(starting_lat % 1 !==0){\n            getWeatherData()\n        }\n            \n    },[starting_lat, starting_long])\n\n    //weather JSX data\n    let weather = []\n    const current_date= new Date()\n    const current_hour = current_date.getHours()\n\n\n    if(weatherData.length > 0){\n        //get every other weather data\n        let output = [...weatherData].map((n,index) => index % 2 === 0 ? n : null)\n        let temp_low = [...weatherData].map((n,index) => index % 2 !== 0 ? n : null)\n        let filtered_output = output.filter(el => el !== null)\n        let temp_low_filtered = temp_low.filter(el => el !== null)\n        //pop the last two for a five day forecase\n        filtered_output.pop()\n        filtered_output.pop()\n        temp_low_filtered.pop()\n        temp_low_filtered.pop()\n\n        \n        if(filtered_output && temp_low_filtered){\n            //if it's night time do temp_low_filtered first\n            if((current_hour >= 18 && current_hour <= 24) || (current_hour >=0 && current_hour <= 6)){\n                //map the JSX data\n                temp_low_filtered.pop()\n                temp_low_filtered.unshift(filtered_output[0])\n                weather = temp_low_filtered.map((day,index) => {\n                    return(\n                        <>\n                            <Box borderWidth=\"1px\" padding=\"5px\" borderColor=\"grey\" className=\"weather-box\" backgroundColor=\"white\">\n                                <Text textAlign=\"center\" className=\"food-text\">{day.name}</Text>\n                                <Image src = {day.icon} w=\"90px\" borderRadius=\"10px\" ml=\"auto\" mr=\"auto\"/>\n                                <Flex flexWrap=\"inline\">\n                                    <Text color=\"grey\"  pr=\"5px\">{day.temperature} F</Text>\n                                    <Spacer />\n                                    <Text color=\"grey\"  pl=\"5px\">{filtered_output[index].temperature} F</Text>\n                                </Flex>\n                            </Box>\n                        </>\n                    )\n                })\n            }else{\n                //map the JSX data\n                weather = filtered_output.map((day,index) => {\n                    return(\n                        <>\n                            <Box borderWidth=\"1px\" padding=\"5px\" borderColor=\"grey\" className=\"weather-box\" backgroundColor=\"white\">\n                                <Text textAlign=\"center\" className=\"food-text\">{day.name}</Text>\n                                <Image src = {day.icon} w=\"90px\" borderRadius=\"10px\" ml=\"auto\" mr=\"auto\"/>\n                                <Flex flexWrap=\"inline\">\n                                    <Text color=\"grey\" className=\"food-text\" pl=\"5px\">{day.temperature} F</Text>\n                                    <Spacer />\n                                    <Text color=\"grey\" className=\"food-text\" pr=\"5px\">{temp_low_filtered[index].temperature} F</Text>\n                                </Flex>\n                            </Box>\n                        </>\n                    )\n                })\n            }\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////\n\n\n\n\n    //create burger icons for number of foods\n    let burgerIcon = []\n    for(let i = 0; i < food; i++){\n        burgerIcon.push(<Icon as={GiHamburger} />)\n    }\n    \n    //create water icons for number of water needed (in L's)\n    let waterIcon = []\n    for(let i=0; i < water; i++){\n        waterIcon.push(<Icon as={GiWaterDrop} />)\n    }\n\n    //on click for the upvote\n    function handleUpvoteClick(){\n        //if you aren't logged in you get pushed to login\n        if(!isLoggedIn){\n            history.push('/login')\n        }\n\n        const user_id = localStorage.getItem(\"id\")\n        const configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json',\n            },\n            mode: \"cors\",\n            body: JSON.stringify({\n                user_id: user_id,\n                trail_id: id\n            })\n        }\n\n    \n        fetch(`/user_trails/upvote`,configObj)\n            .then(res => res.json())\n            .then(data => {\n                if(data.error){\n                    console.log(data.error)\n                }else{\n                    setTrailData(data)\n                }\n            })\n    }\n\n    //on click for the downvote\n    function handleDownvoteClick(){\n        //if you aren't logged in you get pushed to login\n        if(!isLoggedIn){\n            history.push('/login')\n        }\n\n        const user_id = localStorage.getItem(\"id\")\n        const configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json',\n            },\n            mode: \"cors\",\n            body: JSON.stringify({\n                user_id: user_id,\n                trail_id: id\n            })\n        }\n\n    \n        fetch(`/user_trails/downvote`,configObj)\n            .then(res => res.json())\n            .then(data => {\n                if(data.error){\n                    console.log(data.error)\n                }else{\n                    setTrailData(data)\n                }\n            })\n    }\n\n    //handle review change\n    function handleReviewChange(e){\n        setReviewAdded(e.target.value)\n    }\n\n    //handle adding a review if logged in\n    function handleAddReview(e){\n        e.preventDefault()\n        //reset the form fields\n        e.target.reset()\n        const user_id = localStorage.getItem(\"id\")\n        const configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                user_id: user_id,\n                trail_id: id,\n                review: reviewAdded,\n            })\n        }\n        fetch('/user_trails/', configObj)\n            .then(res => res.json())\n            .then(data => {\n\n                let filter_id\n                if(data.id){\n                    filter_id = data.id\n                }else{\n                    filter_id = data[0].id\n                }\n                //see if this user trail table/data exists already\n                let filteredIndex\n                let filtered_data = trailData.user_trails.filter((ut,index) => {\n                    if(ut.id === filter_id){\n                        filteredIndex = index\n                    }\n                    return ut.id === filter_id})\n                //if it exists, replace the old isntance and replace with the new instance\n                if(filtered_data.length > 0) {\n                    let mutable_trailData = {...trailData}\n                    mutable_trailData.user_trails.splice(+filteredIndex,1)\n                    filtered_data[0][\"review\"]=reviewAdded\n                    mutable_trailData.user_trails.push(filtered_data[0])\n                    setTrailData(mutable_trailData)\n                //if it doesn't exist, add the new instance\n                }else{\n                    let mutable_trailData = {...trailData}\n                    mutable_trailData.user_trails.push(data)\n                    setTrailData(mutable_trailData)\n                }\n            })\n    }\n\n    //handle clicking the favorite button\n    function handleFavClick(){\n        //if you aren't logged in you get pushed to login\n        if(!isLoggedIn){\n            history.push('/login')\n        }\n        if(isLoggedIn){\n            setFavClicked(prev => !prev)\n        }\n        \n\n        const user_id = localStorage.getItem(\"id\")\n\n        //need bang operator since state change is async\n        const configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: user_id,\n                trail_id: id,\n                \"favorite?\": !favClicked\n            })\n        }\n\n        fetch('/user_trails', configObj)\n            .then(res => res.json())\n            .then(data => {\n                \n                let filter_id = data.id\n                let filteredIndex\n                let filtered_data = trailData.user_trails.filter((ut,index)=> {\n                    if(ut.id === filter_id){\n                        filteredIndex = index\n                    }\n                    return ut.id === filter_id\n                })\n\n                let mutable_trailData = {...trailData}\n                if(filtered_data.length > 0){\n                    mutable_trailData.user_trails.splice(+filteredIndex,1)\n                    filtered_data[0][\"favorite?\"] = !favClicked\n                    mutable_trailData.user_trails.push(filtered_data[0])\n                    setTrailData(mutable_trailData)\n                }else{\n                    mutable_trailData.user_trails.push(data)\n                    setTrailData(mutable_trailData)\n                }\n            })\n    }\n\n    //////////////// see if favorite already clicked ///////////////////////\n    const [alreadyClicked, setAlreadyClicked] = useState(false)\n\n    //check to see if favorite has already been clicked\n    useEffect(() => {\n        let found = findFirstTime()\n        setAlreadyClicked(found)\n        setFavClicked(found)\n    },[trailData])\n\n  \n    //find first instance of favorite click\n    function findFirstTime(){\n        const user_id = localStorage.getItem(\"id\")\n        if(user_trails && isLoggedIn){\n            let find_ut = user_trails.filter(ut => { \n                return +ut.user.id === +user_id && +ut.trail.id === +id})\n            if(find_ut.length > 0){\n                if(find_ut[0][\"favorite?\"] === true){\n                    return true\n                }else{\n                    return false\n                }\n            }else{\n                return false\n            }\n        }\n\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////\n   \n    //map out the reviews with the user name\n    let reviews = []\n    if(user_trails){\n        //sort the reviews so that newest comes up at the top\n        reviews = user_trails.sort(function(a,b) {\n            let a_date = new Date(a.updated_at)\n            let b_date = new Date(b.updated_at)\n            \n            return b_date - a_date\n        \n        }).map(ut => {\n            if(ut[\"review\"]){\n                return (\n                    <>\n                    <Divider mt=\"15px\" key={ut.id}/>\n                        <Box mt=\"25px\" ml=\"25px\" mb=\"25px\" fontFamily=\"Lato\">\n                            <Flex flexWrap=\"inline\">\n                                <Avatar name={ut.user.name} src='https://bit.ly/broken-link' />\n                                <Text mt=\"1%\" ml=\"10px\">{ut.user.name}</Text>\n                            </Flex>\n                            <Text mt=\"15px\">{ut[\"review\"]}</Text>\n                        </Box>\n                    {/* <Divider mt=\"25px\"/> */}\n                    </>\n                )\n            }\n        })\n    }\n\n    \n     \n    return (\n        <>\n        <Flex flexWrap=\"inline\" justifyContent=\"center\" mt=\"15px\">\n                {weather}\n        </Flex>\n        <Box ml = \"25px\" w=\"85%\" className=\"trail-page-container\" fontFamily=\"Lato\">\n            {/* Title and upvote and downvote */}\n            <Flex w= \"100%\" justifyContent=\"right\">\n                <Text className = \"trail-page-heading\" fontSize=\"4xl\" w=\"80%\">{name}</Text>\n                <Flex w=\"20%\" justifyContent=\"right\">\n                    <Flex flexWrap=\"inline\" mt=\"auto\" mb=\"auto\">\n                        <Icon as={BiUpvote} mr=\"10px\" mt = \"5px\" onClick={handleUpvoteClick}/> \n                        <Text>{upvote}</Text>\n                    </Flex>\n                    <Flex flexWrap=\"inline\" mt=\"auto\" mb=\"auto\" ml=\"20px\">\n                        <Icon as={BiDownvote} mr=\"10px\" mt = \"5px\" onClick={handleDownvoteClick}/> \n                        <Text>{downvote}</Text>\n                    </Flex>\n                    <Flex mt=\"auto\" mb=\"auto\" ml=\"20px\" onClick={handleFavClick}>\n                        {favClicked || alreadyClicked ? <Icon as={FaStar} /> : <Icon as={FaRegStar} />}\n                    </Flex>\n                </Flex>\n            </Flex>\n            \n            {/* Image and Map container */}\n            <Flex flexWrap=\"inline\" w=\"100%\" justifyContent=\"center\" >\n                <Image className=\"trail-page-img\" src={pictures[0]} w=\"50%\" alt=\"trail page image\" m=\"5px\" borderRadius=\"5\"/>\n                <Box w=\"50%\" mt=\"auto\" mb=\"auto\" pl=\"20px\">\n                    {map}\n                </Box>\n                \n            </Flex>\n            {/* {map} */}\n            <Box  w=\"80%\" ml=\"calc(10% - 25px)\" maxW=\"600px\">\n                {/* Add 1st table */}\n                    <TableContainer  border=\"2px ridge\" mt=\"10px\" borderRadius=\"5px\" backgroundColor=\"white\">\n                        <Table variant='simple' >\n                            <Thead >\n                            <Tr>\n                                <Th fontFamily=\"Lato\">Difficulty</Th>\n                                <Th fontFamily=\"Lato\">Miles</Th>\n                                <Th fontFamily=\"Lato\">Estimated Time</Th>\n                                <Th fontFamily=\"Lato\">Type</Th>\n                            </Tr>\n                            </Thead>\n                            <Tbody >\n                            <Tr borderTop=\"ridge 1.5px\" fontFamily=\"Lato\">\n                                <Td>{difficulty}</Td>\n                                <Td>{mileage}</Td>\n                                <Td>{estimated_time}</Td>\n                                <Td>{route_type}</Td>\n                            </Tr>\n                            </Tbody>\n                        </Table>\n                    </TableContainer>\n\n            </Box>\n            <Flex flexWrap=\"inline\" w=\"100%\" ml=\"calc(10% - 25px)\" mt=\"10px\">\n                <Flex w=\"80%\">\n                    <TableContainer w=\"70%\" border=\"2px ridge\" backgroundColor=\"white\"  maxW=\"600px\">\n                        <Table variant=\"simple\" fontFamily=\"Lato\">\n                            <Thead>\n                                <Tr>\n                                    <Th fontFamily=\"Lato\">Recommended Food</Th>\n                                    <Th fontFamily=\"Lato\">Recommended Water</Th>\n                                </Tr>\n                            </Thead>\n                            <Tbody>\n                                <Tr borderTop=\"ridge 1.5px\">\n                                    <Td>{burgerIcon}</Td>\n                                    <Td>{waterIcon}</Td>\n                                </Tr>\n                            </Tbody>\n                        </Table>\n                    </TableContainer>\n                    {/* creating stats table for the elevation */}\n                    <Flex textAlign = \"right\" w=\"30%\">\n                        <StatGroup w=\"100%\"  mt=\"10px\">\n                            <Stat fontFamily=\"Lato\">\n                                <StatLabel>Starting Elevation</StatLabel>\n                                <StatNumber>{starting_elevation} ft</StatNumber>\n                                <StatHelpText>\n                                <StatArrow type={elevation_gain >=0 ?'increase' : 'decrease'} />\n                                {elevation_gain} ft of elevation gain\n                                </StatHelpText>\n                            </Stat>\n                        </StatGroup>\n                    </Flex>\n                </Flex>\n            </Flex>\n            {/* If logged in you can leave a review */}\n            {isLoggedIn ? \n                <>\n                    <form onSubmit={handleAddReview} >\n                        <Box w=\"80%\" ml=\"calc(10% - 25px)\" mt=\"50px\" fontFamily=\"Lato\">\n                            <FormControl isRequired  >\n                                <FormLabel>Add a Review!</FormLabel>\n                                <Textarea onChange={handleReviewChange} borderColor=\"black\" backgroundColor=\"white\"></Textarea>            \n                            </FormControl>\n                            <Button type=\"submit\" float=\"right\" mt=\"10px\"  mb=\"50px\">Submit</Button>\n                        </Box>\n                    </form>\n                </>\n        \n            : null}\n            {/* <Divider mt=\"50px\"/> */}\n\n            {/* Add reviews */}\n            <Text fontFamily=\"Lato\" fontSize='2xl' fontWeight=\"semibold\" ml=\"25px\" mt=\"50px\">User Reviews</Text>\n            {reviews}\n        </Box>\n        </>\n    )\n}\n\nexport default TrailPage","import {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {Input, InputGroup, Icon, InputRightAddon, Button, Select, FormControl, Heading, FormLabel, Box, Text, Flex, FormHelperText} from '@chakra-ui/react'\nimport {GiHamburger} from 'react-icons/gi'\n\nfunction NewTrailForm({isLoggedIn}){\n    //set error for filling out the new trail form\n    const [errors, setErrors] = useState([])\n    let history = useHistory()\n\n\n    //set const for all inputs\n    const [allInputs, setAllInputs] = useState({pictures: []})\n\n    //prepend website with https:// if not already present\n    // function addhttp(url) {\n    //     if (!/^(?:f|ht)tps?\\:\\/\\//.test(url)) {\n    //         url = \"http://\" + url;\n    //     }\n    //     return url;\n    // }\n\n\n    const handleNewTrailSubmit = async (e) => {\n        e.preventDefault()\n        // let form = new FormData(document.querySelector(\"#new-trail-form\"))\n    \n        let req = await fetch(\"/trails\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(allInputs)\n        })\n        if(req.ok){\n            setErrors(['Thanks for successfully submitting the new trail!'])\n            let res = req.json()\n            history.push('/yosemite/trails')\n            console.log(res)\n        }else{\n            let res = await req.json()\n            let err_array = []\n\n            for(let i in res.errors) {\n                let message = `${i}: ${res.errors[i]}`\n                err_array.push(message)\n            }\n            setErrors(err_array)\n        }\n        \n    }\n\n    const [inputHr, setInputHr] = useState(\"0\")\n    const [inputMin, setInputMin] = useState(\"0\")\n    function handleTimeInput(e){\n        if(e.target.name === \"hr\"){\n            setInputHr(e.target.value)\n            setAllInputs({...allInputs,\"estimated_time\": `${e.target.value} h ${inputMin} min`})\n        }else if(e.target.name === \"min\"){\n            setInputMin(e.target.value)\n            setAllInputs({...allInputs,\"estimated_time\": `${inputHr} h ${e.target.value} min`})\n        }\n    }\n\n    let disabled_val\n    if(isLoggedIn){\n        disabled_val = false\n    }else{\n        disabled_val = true\n    }\n\n    console.log(allInputs)\n    return (\n        <Box mt=\"60px\" w=\"80%\" ml=\"auto\" mr=\"auto\" fontFamily=\"Lato\"> \n            <Heading mb=\"15px\" fontFamily=\"Raleway\">Please Add a Trail!</Heading>\n            {errors.map(error => <Text color=\"red\">{error}</Text>)}\n            <form id=\"new-trail-form\" onSubmit={handleNewTrailSubmit}>\n                <FormControl isRequired>\n                    <FormLabel>Name</FormLabel>\n                    <Input backgroundColor=\"white\" name=\"name\" placeholder=\"Enter Name of the Trail\" onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}/>\n                </FormControl>\n                <FormControl isRequired w=\"300px\" mt=\"10px\">\n                    <FormLabel>Mileage</FormLabel>\n                    <Input backgroundColor=\"white\" name=\"mileage\" placeholder=\"Enter the length of the trail (mi)\" onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}/>\n                </FormControl>\n                <Flex flexWrap=\"inline\">       \n                    <FormControl isRequired w=\"300px\" mt=\"10px\">\n                        <FormLabel>Starting Elevation</FormLabel>\n                        <InputGroup>\n                            <Input backgroundColor=\"white\" name = \"starting_elevation\" placeholder=\"Enter the starting elevation\" onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}/>\n                            <InputRightAddon children=\"ft\"></InputRightAddon>\n                        </InputGroup>\n                    </FormControl>\n                    <FormControl isRequired w=\"300px\" mt=\"10px\" ml=\"25px\">\n                        <FormLabel>Elevation Gain</FormLabel>\n                        <InputGroup>\n                            <Input backgroundColor=\"white\" name = \"elevation_gain\" placeholder=\"Enter the elevation gain\" onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}/>\n                            <InputRightAddon children=\"ft\"></InputRightAddon>\n                        </InputGroup>\n                    </FormControl>\n                </Flex>\n                <Flex flexWrap=\"inline\">\n                    <FormControl isRequired w=\"300px\" mt=\"10px\">\n                        <FormLabel>Starting Latitude</FormLabel>\n                        <Input backgroundColor=\"white\" name = \"starting_lat\" placeholder=\"Enter the starting latitude\" onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}/>\n                    </FormControl>\n                    <FormControl isRequired w=\"300px\" mt=\"10px\" ml=\"25px\">\n                        <FormLabel>Starting Longitude</FormLabel>\n                        <Input backgroundColor=\"white\" name = \"starting_long\" placeholder=\"Enter the starting longitude\" onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}/>\n                    </FormControl>\n                </Flex>\n                <Flex flexWrap=\"inline\">               \n                    <FormControl isRequired w=\"300px\" mt=\"10px\"> \n                        <FormLabel>Route Type</FormLabel>\n                        <Select backgroundColor=\"white\" name=\"route_type\" placeholder = 'Select the route type' onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}>\n                            <option value=\"Out & Back\">Out & Back</option>\n                            <option value=\"Loop\">Loop</option>\n                        </Select>\n                    </FormControl>\n                    <FormControl isRequired w=\"300px\" ml=\"25px\" mt=\"10px\">\n                        <FormLabel>Difficulty</FormLabel>\n                        <Select backgroundColor=\"white\" name=\"difficulty\" placeholder = 'Select the difficulty' onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}>\n                            <option value=\"Extremely Hard\">Extremely Hard</option>\n                            <option value=\"Hard\">Hard</option>\n                            <option value=\"Medium\">Medium</option>\n                            <option value=\"Easy\">Easy</option>\n                        </Select>\n                    </FormControl>\n                    <FormControl isRequired w=\"300px\" ml=\"25px\" mt=\"10px\">\n                        <FormLabel>Estimated Time</FormLabel>\n                        <InputGroup name=\"estimated_time\" onChange={(e)=> {\n                            handleTimeInput(e) \n                        }}>\n                            <Input backgroundColor=\"white\" name=\"hr\" placeholder=\"hr\"></Input>\n                            <InputRightAddon children=\" hr\"></InputRightAddon>\n                            <Input backgroundColor=\"white\" name = \"min\" placeholder=\"min\"></Input>\n                            <InputRightAddon > min</InputRightAddon>\n                            {/* <Input name = \"estimated_time\" placeholder=\"Enter the estimated time\" onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}/> */}\n                        </InputGroup>\n                        \n                    </FormControl>\n                </Flex>\n                <Flex flexWrap=\"inline\">                \n                    <FormControl isRequired w=\"300px\" mt=\"10px\">\n                        <FormLabel>Recommended Water</FormLabel>\n                        <Select backgroundColor=\"white\" name=\"water\" placeholder = 'Select the water needed (L)' onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}>\n                            <option value=\"1\">1L</option>\n                            <option value=\"2\">2L</option>\n                            <option value=\"3\">3L</option>\n                            <option value=\"4\">4L</option>\n                        </Select>\n                    </FormControl>\n                    <FormControl isRequired w=\"300px\" ml=\"25px\" mt=\"10px\">\n                        <FormLabel>Recommended Food</FormLabel>\n                        <Select backgroundColor=\"white\" name=\"food\" placeholder = 'Select the food needed' onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                        </Select>\n                        <FormHelperText><Icon as={GiHamburger}/> = Light Snack</FormHelperText>\n                        <FormHelperText><Icon as={GiHamburger}/><Icon as={GiHamburger}/> = Lunch</FormHelperText>\n                        <FormHelperText><Icon as={GiHamburger}/><Icon as={GiHamburger}/><Icon as={GiHamburger}/> = Lunch + Snack</FormHelperText>\n                        <FormHelperText><Icon as={GiHamburger}/><Icon as={GiHamburger}/><Icon as={GiHamburger}/><Icon as={GiHamburger}/> = Multiple Lunches + Snacks</FormHelperText>\n                    </FormControl>\n                </Flex>\n                <FormControl isRequired mt=\"10px\">\n                    <FormLabel>Pictures</FormLabel>\n                    <Input backgroundColor=\"white\" name = \"pictures\" placeholder=\"Enter the pictures\" onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: [e.target.value]})}/>\n                </FormControl>\n                {/* Disable button when not logged in */}\n                <Button colorScheme=\"blue\" disabled={disabled_val} type=\"submit\" mt=\"15px\" mb=\"50px\">Submit</Button>\n            </form>\n    </Box>\n    )\n\n}\n\nexport default NewTrailForm","import {Image, Box, Text, Flex, Icon} from '@chakra-ui/react'\nimport {useHistory, useLocation} from 'react-router-dom'\nimport {BiUpvote, BiDownvote} from 'react-icons/bi'\n\nfunction FoodCard({food}){\n\n    //refactor the food instance\n    const {id, name, pictures, upvote, downvote} = food\n\n    //create history to push\n    const history = useHistory()\n    const {pathname} = useLocation()\n\n    //create onclick to send to individual food page\n    function handleFoodCardClick(){\n        if (pathname !== `/yosemite/food/${id}`){\n            history.push({pathname: `/yosemite/food/${id}`,\n                          state: {\n                            id: id\n                          }\n        })\n        }\n    }\n\n    return (\n        <>\n        <Box w=\"calc(100% * (1/4) - 25px - 20px)\" fontFamily=\"Lato\" backgroundColor=\"white\" borderColor=\"black\" height=\"285px\" borderWidth='1px' borderRadius='lg' overflow='hidden' m='5' onClick={handleFoodCardClick}>\n            <Image src={pictures[0]} alt=\"Picture of food\" w=\"100%\" h=\"60%\" ml =\"auto\" mr=\"auto\" pl=\"10px\" pr=\"10px\" pt=\"10px\" borderRadius=\"20px\"/>\n            <Box p='6'>\n                {/* difficult + route_type + estimate_time */}\n                <Box display='flex' alignItems='baseline'>\n                    <Box\n                        color='gray.500'\n                        fontWeight='semibold'\n                        letterSpacing='wide'\n                        fontSize='sm'\n                        textTransform='uppercase'\n                        ml='0'\n                    >\n                        {/* {difficulty} &bull; {route_type} &bull; {estimated_time} ({mileage} mi) */}\n                    </Box>\n                </Box>\n                {/* title of the card */}\n                <Box\n                    mt='1'\n                    fontWeight='semibold'\n                    as='h4'\n                    lineHeight='tight'\n                    noOfLines={2}\n                    fontFamily=\"Raleway\"\n                    >\n                    {name}\n                </Box>\n                <Flex \n                    flexWrap=\"inline\"\n                    color='gray.500'\n                    fontWeight='semibold'\n                    letterSpacing='wide'\n                    fontSize='sm'\n                    textTransform='uppercase'\n                    ml='0'\n                >\n                    <Flex>\n                        <Icon as={BiUpvote} mt=\"4px\"/>\n                        <Text>{upvote}</Text>\n                    </Flex>\n                    <Flex>\n                        <Icon as={BiDownvote} ml = \"15px\" mt=\"4px\"/>\n                        <Text >{downvote}</Text>\n                    </Flex>\n                    \n                </Flex>\n\n            </Box>\n        </Box>\n\n        </>\n    )\n\n}\n\nexport default FoodCard","import { useEffect, useState } from \"react\"\nimport FoodCard from \"./FoodCard\"\nimport {Flex, Heading, Divider} from '@chakra-ui/react'\n\nfunction FoodContainer(){\n    //set state for all food data\n    const [allFoods, setAllFoods] = useState([])\n    //fetch the food data\n    useEffect(()=> {\n        fetch(\"/foods\")\n            .then(res => res.json())\n            .then(data => setAllFoods(data))\n    },[])\n\n    //guard clause against empty arrays\n    let restaurants = []\n    let groceries = []\n    //filtering between restaurants and groceries\n    if(allFoods.length > 0){\n        restaurants = allFoods.filter(food => food.food_type !== \"Grocery\")\n        groceries = allFoods.filter(food => food.food_type === \"Grocery\")\n    }\n\n    //create filter based off of upvote\n    if(restaurants.length > 0){\n        restaurants.sort(function(a,b) {\n            return parseInt(b.upvote) - parseInt(a.upvote)\n        })\n    }\n\n    if(groceries.length > 0){\n        groceries.sort(function(a,b) {\n            return parseInt(b.upvote) - parseInt(a.upvote)\n        })\n    }\n\n    return (\n        <>\n            <Heading mt=\"40px\" ml=\"25px\" fontFamily=\"Raleway\">Restaurants at Yosemite!</Heading>\n            <Flex flexWrap=\"wrap\" justifyContent=\"left\" >\n                {restaurants.map(food=> {\n                    return <FoodCard key={food.id} food={food} />\n                })}\n            </Flex>\n\n            <Divider mt=\"40px\"/>\n\n            <Heading mt=\"40px\" ml=\"25px\" fontFamily=\"Raleway\">Groceries at Yosemite!</Heading>\n            <Flex flexWrap=\"wrap\" justifyContent=\"left\" >\n                {groceries.map(food=> {\n                    return <FoodCard key={food.id} food={food} />\n                })}\n            </Flex>\n        </>\n    )\n\n}\n\nexport default FoodContainer","import {useState, useEffect} from 'react'\nimport {useParams, useHistory} from 'react-router-dom'\nimport {Heading, Box, Image, Text, Flex, Spacer, Link, Divider, Avatar, FormControl, FormLabel, Textarea, Button, Icon} from '@chakra-ui/react'\nimport {FiExternalLink} from 'react-icons/fi'\nimport {BiUpvote, BiDownvote} from 'react-icons/bi'\nimport {FaStar, FaRegStar} from 'react-icons/fa'\nimport {GoogleMap, useLoadScript, Marker} from \"@react-google-maps/api\"\nimport '../food_page.css'\n\nfunction FoodPage({isLoggedIn}){\n    \n    //get id of the food page\n    const { id } = useParams()\n    //intialize usehistory to push later on\n    const history = useHistory()\n    //set state for retrieving the data to this specific food page\n    const [foodData, setFoodData] = useState({\n        pictures: [],\n        user_foods: [{reviews: '', user: {name: ''}, [\"favorite?\"]: ''}],\n\n    })\n\n    //set an on change state for when a review is typed in\n    const [reviewAdded, setReviewAdded] = useState()\n\n    //set state for clicking the favorite button\n    const [favClicked, setFavClicked] = useState(false)\n\n    //pull the food data for just the one food\n    useEffect(()=> {\n        const getFood = async () => {\n            let req = await fetch(`/foods/${id}`);\n        \n            if (req.ok) {\n                let res = await req.json();\n                setFoodData(res);\n            } else {\n                console.error(\"whoops\");\n            }\n            };\n            getFood();\n    },[id])\n\n    ///////////////////////////////////  CREATING MAPS     /////////////////////////////////////////////////////////////\n    //hide the API key for google maps\n    const {isLoaded} = useLoadScript({googleMapsApiKey: process.env.REACT_APP_NEXT_PUBLIC_GOOGLE_MAPS_API_KEY})\n    \n    //create state to take in the lat and long of the address\n    const [latlong, setLatlong] = useState({lat: '', lng: ''})\n\n    //geocoder API call\n    useEffect(() => {\n        const data = async () => {\n            if(address){\n                let added_plus = address.split(' ').join('+')\n                let req = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?new_forward_geocoder=true&address=${added_plus}&key=${process.env.REACT_APP_NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}`);\n\n                if (req.ok){\n                    let res = await req.json()\n                    setLatlong(res.results[0].geometry.location)\n                }\n            }\n        } \n\n       data()\n    },[foodData])\n\n    //creating the google map\n    let map\n    if(!isLoaded){\n        map = <div>Loading...</div>\n    }else if(isLoaded && latlong.lat && latlong.lng){\n        map = <GoogleMap zoom={13} center={{lat: latlong.lat, lng: latlong.lng}} mapContainerClassName=\"map-container\">\n\n            <Marker position={{lat: latlong.lat, lng: latlong.lng}} label=\"SL\"  />\n        </GoogleMap>\n    }\n    \n\n    ////////////////////////////////////////////////////////////////////////////////////\n\n\n    ///////////////////////  WEATHER API ////////////////////////////\n\n    const [weatherData, setWeatherData] = useState([])\n    useEffect(() => {\n        const getWeatherData = async() => {\n            let req = await fetch(`https://api.weather.gov/points/${latlong.lat},${latlong.lng}`);\n\n            if(req.ok){\n                let res = await req.json()\n                \n                const get_forecast = async() => {\n                    let w_req = await fetch(res.properties.forecast)    \n                \n                    if(w_req.ok){\n                        let data = await w_req.json()\n                        setWeatherData(data.properties.periods)\n                    }\n                }\n                get_forecast()\n            }\n        }\n            if(latlong.lat % 1 !== 0 && latlong.lat !== -34.4845){\n                getWeatherData()\n            }\n    },[latlong])\n\n    //weather JSX data\n    let weather = []\n    const current_date= new Date()\n    const current_hour = current_date.getHours()\n\n\n    if(weatherData.length > 0){\n        //get every other weather data\n        let output = [...weatherData].map((n,index) => index % 2 === 0 ? n : null)\n        let temp_low = [...weatherData].map((n,index) => index % 2 !== 0 ? n : null)\n        let filtered_output = output.filter(el => el !== null)\n        let temp_low_filtered = temp_low.filter(el => el !== null)\n        //pop the last two for a five day forecase\n        filtered_output.pop()\n        filtered_output.pop()\n        temp_low_filtered.pop()\n        temp_low_filtered.pop()\n\n        \n        if(filtered_output && temp_low_filtered){\n            //if it's night time do temp_low_filtered first\n            if((current_hour >= 18 && current_hour <= 24) || (current_hour >=0 && current_hour <= 6)){\n                //map the JSX data\n                temp_low_filtered.pop()\n                temp_low_filtered.unshift(filtered_output[0])\n                weather = temp_low_filtered.map((day,index) => {\n                    return(\n                        <>\n                            <Box borderWidth=\"1px\" padding=\"5px\" borderColor=\"grey\" className=\"weather-box\" backgroundColor=\"white\">\n                                <Text textAlign=\"center\" className=\"food-text\">{day.name}</Text>\n                                <Image src = {day.icon} w=\"90px\" borderRadius=\"10px\" ml=\"auto\" mr=\"auto\"/>\n                                <Flex flexWrap=\"inline\">\n                                <Text color=\"grey\" className=\"food-text\" pr=\"5px\">{day.temperature} F</Text>\n                                    <Spacer />\n                                    <Text color=\"grey\" className=\"food-text\" pl=\"5px\">{filtered_output[index].temperature} F</Text>\n                                </Flex>\n                            </Box>\n                        </>\n                    )\n                })\n            }else{\n                //map the JSX data\n                weather = filtered_output.map((day,index) => {\n                    return(\n                        <>\n                            <Box borderWidth=\"1px\" padding=\"5px\" borderColor=\"grey\" className=\"weather-box\" backgroundColor=\"white\">\n                                <Text textAlign=\"center\" className=\"food-text\">{day.name}</Text>\n                                <Image src = {day.icon} w=\"90px\" borderRadius=\"10px\" ml=\"auto\" mr=\"auto\"/>\n                                <Flex flexWrap=\"inline\">\n                                    <Text color=\"grey\" className=\"food-text\" pl=\"5px\">{day.temperature} F</Text>\n                                    <Spacer />\n                                    <Text color=\"grey\" className=\"food-text\" pr=\"5px\">{temp_low_filtered[index].temperature} F</Text>\n                                </Flex>\n                            </Box>\n                        </>\n                    )\n                })\n            }\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////\n\n\n    //on click for the upvote\n    function handleUpvoteClick(){\n        //if you aren't logged in you get pushed to login\n        if(!isLoggedIn){\n            history.push('/login')\n        }\n\n        const user_id = localStorage.getItem(\"id\")\n        const configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json',\n            },\n            mode: \"cors\",\n            body: JSON.stringify({\n                user_id: user_id,\n                food_id: id\n            })\n        }\n\n    \n        fetch(`/user_foods/upvote`,configObj)\n            .then(res => res.json())\n            .then(data => {\n                if(data.error){\n                    console.log(data.error)\n                }else{\n                    setFoodData(data)\n                }\n            })\n    }\n\n    //on click for the downvote\n    function handleDownvoteClick(){\n        //if you aren't logged in you get pushed to login\n        if(!isLoggedIn){\n            history.push('/login')\n        }\n\n        const user_id = localStorage.getItem(\"id\")\n        const configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json',\n            },\n            mode: \"cors\",\n            body: JSON.stringify({\n                user_id: user_id,\n                food_id: id\n            })\n        }\n\n    \n        fetch(`/user_foods/downvote`,configObj)\n            .then(res => res.json())\n            .then(data => {\n                if(data.error){\n                    console.log(data.error)\n                }else{\n                    setFoodData(data)\n                }\n            })\n    }\n\n\n    ////////////////////////////////     ADD/CHANGE User Foods Table //////////////////////////////////////\n\n    //fetch foods, if user_foods exists for this user, patch. If not, create a new user foods instance\n    //handle review change\n    function handleReviewChange(e){\n        setReviewAdded(e.target.value)\n    }\n\n    //handle adding a review if logged in\n    function handleAddReview(e){\n        e.preventDefault()\n        //reset the form fields\n        e.target.reset()\n        const user_id = localStorage.getItem(\"id\")\n        const configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                user_id: user_id,\n                food_id: id,\n                review: reviewAdded,\n            })\n        }\n        fetch('/user_foods/', configObj)\n        .then(res => res.json())\n        .then(data => {\n            let filter_id\n            if(data.id){\n                filter_id = data.id\n            }else{\n                filter_id = data[0].id\n            }\n            //see if this user trail table/data exists already\n            let filteredIndex\n           \n            let filtered_data = foodData.user_foods.filter((uf,index) => {\n                if(uf.id === filter_id){\n                    filteredIndex = index\n                }\n                return uf.id === filter_id})\n  \n            //if it exists, replace the old isntance and replace with the new instance\n            if(filtered_data.length > 0) {\n                let mutable_foodData = {...foodData}\n                mutable_foodData.user_foods.splice(+filteredIndex,1)\n                filtered_data[0][\"review\"]=reviewAdded\n                mutable_foodData.user_foods.push(filtered_data[0])\n                setFoodData(mutable_foodData)\n            //if it doesn't exist, add the new instance\n            }else{\n                let mutable_foodData = {...foodData}\n                mutable_foodData.user_foods.push(data)\n                setFoodData(mutable_foodData)\n            }\n        })\n    }\n\n    //handle clicking the favorite button\n    function handleFavClick(){\n        //if you aren't logged in you get pushed to login\n        if(!isLoggedIn){\n            history.push('/login')\n        }\n\n        setFavClicked(prev => !prev)\n        const user_id = localStorage.getItem(\"id\")\n\n        //need bang operator since state change is async\n        const configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user_id: user_id,\n                food_id: id,\n                \"favorite?\": !favClicked\n            })\n        }\n\n        fetch('/user_foods', configObj)\n            .then(res => res.json())\n            .then(data => {\n                \n                let filter_id = data.id\n                let filteredIndex\n                let filtered_data = foodData.user_foods.filter((uf,index)=> {\n                    if(uf.id === filter_id){\n                        filteredIndex = index\n                    }\n                    return uf.id === filter_id\n                })\n\n                let mutable_foodData = {...foodData}\n                if(filtered_data.length > 0){\n                    mutable_foodData.user_foods.splice(+filteredIndex,1)\n                    filtered_data[0][\"favorite?\"] = !favClicked\n                    mutable_foodData.user_foods.push(filtered_data[0])\n                    setFoodData(mutable_foodData)\n                }else{\n                    mutable_foodData.user_foods.push(data)\n                    setFoodData(mutable_foodData)\n                }\n            })\n    }\n\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //refactor the food data into its attributes\n    const {name, address, website, proximity, pictures, food_type, description, user_foods, upvote, downvote} = foodData\n    \n\n    //////////////// see if favorite already clicked ///////////////////////\n    const [alreadyClicked, setAlreadyClicked] = useState(false)\n\n    //check to see if favorite has already been clicked\n    useEffect(() => {\n        let found = findFirstTime()\n        setAlreadyClicked(found)\n        setFavClicked(found)\n    },[foodData])\n\n    //find first instance of favorite click\n    function findFirstTime(){\n        const user_id = localStorage.getItem(\"id\")\n        if(user_foods && isLoggedIn){\n            let find_uf = user_foods.filter(uf => +uf.user.id === +user_id && +uf.food.id === +id)\n            if(find_uf.length > 0){\n                if(find_uf[0][\"favorite?\"] === true){\n                    return true\n                }else{\n                    return false\n                }\n            }else{\n                return false\n            }\n        }\n\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////\n        \n    //map out the reviews with the user name\n   let reviews = []\n   if(user_foods){\n    reviews = user_foods.sort(function(a,b) {\n        let a_date = new Date(a.updated_at)\n        let b_date = new Date(b.updated_at)\n        \n        return b_date - a_date\n    }).map(uf => {\n        if(uf[\"review\"]){\n            return (\n                <div key={uf.id}>\n                    <Divider mt=\"15px\"/>\n                    <Box mt=\"25px\"  mb=\"25px\" className=\"food-text\" fontFamily=\"Lato\">\n                        <Flex flexWrap=\"inline\">\n                            <Avatar name={uf.user.name} src='https://bit.ly/broken-link' />\n                            <Text mt=\"1%\" ml=\"10px\">{uf.user.name}</Text>\n                        </Flex>\n                        <Text mt=\"15px\">{uf[\"review\"]}</Text>\n                    </Box>\n                </div>\n        \n            )\n        }\n     })\n\n   }\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////\n    return (\n        <>\n            <Flex flexWrap=\"inline\" justifyContent=\"center\" mt=\"15px\">\n                    {weather}\n            </Flex>\n            <Box mt=\"40px\" ml = \"25px\" w=\"85%\" className=\"food-text\" fontFamily=\"Lato\">\n                <Flex flexWrap=\"inline\" w=\"100%\" justifyContent=\"right\">\n                    <Text fontSize=\"4xl\" w=\"80%\" className=\"food-heading\">{name}</Text>\n                    <Flex w=\"20%\" justifyContent=\"right\">\n                        <Flex flexWrap=\"inline\" mt=\"auto\" mb=\"auto\">\n                            <Icon as={BiUpvote} mr=\"10px\" mt = \"5px\" onClick={handleUpvoteClick}/> \n                            <Text>{upvote}</Text>\n                        </Flex>\n                        <Flex flexWrap=\"inline\" mt=\"auto\" mb=\"auto\" ml=\"20px\">\n                            <Icon as={BiDownvote} mr=\"10px\" mt = \"5px\" onClick={handleDownvoteClick}/> \n                            <Text>{downvote}</Text>\n                        </Flex>\n                        <Flex mt=\"auto\" mb=\"auto\" ml=\"20px\" onClick={handleFavClick}>\n                            {favClicked || alreadyClicked ? <Icon as={FaStar} /> : <Icon as={FaRegStar} />}\n                        </Flex>\n                    </Flex>\n                </Flex>\n                <Flex wrap=\"inline\" >\n                    <Image src={pictures[0]} w=\"60%\" borderRadius=\"20px\" minH = \"350px\" maxH = \"375px\" maxW=\"800px\" mt=\"auto\" mb=\"auto\"/>\n                    <Box w=\"40%\" pl=\"20px\" mt=\"auto\" mb=\"auto\">\n                        {map}\n                    </Box>\n                </Flex>\n                <Box\n                        color='gray.500'\n                        fontWeight='semibold'\n                        letterSpacing='wide'\n                        fontSize='sm'\n                        ml='0'\n                        mt=\"-15px\"\n                    >\n                        <Flex flexWrap=\"inline\"> \n                            <Text className=\"food-text\">{address}</Text>\n                            <Spacer />\n                            <Text className=\"food-text\">{food_type}</Text>    \n                        </Flex>\n                        <Flex flexWrap=\"inline\" color=\"blue\">\n                            <Link href={website} className=\"food-text\" isExternal>\n                                Official Website \n                            </Link>\n                            <FiExternalLink mx=\"2px\"/>\n                        </Flex>\n                </Box>\n                <Box mt=\"15px\">\n                    <p className=\"food-description\" style={{\"whiteSpace\": \"pre-line\"}}>{description}</p>\n                </Box>\n                \n            \n\n                {/* If logged in you can leave a review */}\n                {isLoggedIn ? \n                    <>\n                        <form onSubmit={handleAddReview} >\n                            <Box w=\"80%\" ml=\"auto\" mr=\"auto\" mt=\"50px\">\n                                <FormControl isRequired  >\n                                    <FormLabel>Add a Review!</FormLabel>\n                                    <Textarea onChange={handleReviewChange} borderColor=\"black\" backgroundColor=\"white\"></Textarea>            \n                                </FormControl>\n                                <Button type=\"submit\" float=\"right\" mt=\"10px\"  mb=\"50px\">Submit</Button>\n                            </Box>\n                        </form>\n                    </>\n            \n                : null}\n\n                {/* Add reviews */}\n                <Text className=\"food-text\" fontSize='2xl' fontWeight=\"semibold\"  mt=\"50px\">User Reviews</Text>\n                {reviews}\n            </Box>\n        </>\n    )\n}\n\nexport default FoodPage","import {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {Input, Button, Heading, Select, FormControl, FormLabel, Box, Textarea, Text, FormErrorMessage, FormHelperText} from '@chakra-ui/react'\n\nfunction NewFoodForm({isLoggedIn}){\n    //set error for filling out the new food form\n    const [errors, setErrors] = useState([])\n    let history = useHistory()\n\n     //set const for all inputs\n     const [allInputs, setAllInputs] = useState({pictures: []})\n\n    //prepend website with https:// if not already present\n    function addhttp(url) {\n        if (!/^(?:f|ht)tps?\\:\\/\\//.test(url)) {\n            url = \"http://\" + url;\n        }\n        return url;\n    }\n\n    const handleNewFoodSubmit = async (e) => {\n        e.preventDefault()\n        \n        let form = new FormData(document.querySelector(\"#new-food-form\"))\n        //append website if needed\n\n        let req = await fetch(\"/foods\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(allInputs)\n        })\n        if(req.ok){\n            setErrors(['Thanks for successfully submitting!'])\n            let res = req.json()\n            console.log(res)\n            history.push('/yosemite/food')\n        }else{\n            let res = await req.json()\n            let err_array = []\n\n            for(let i in res.errors) {\n                let message = `${i}: ${res.errors[i]}`\n                err_array.push(message)\n            }\n            setErrors(err_array)\n        }\n\n    }\n\n    let disabled_val\n    if(isLoggedIn){\n        disabled_val = false\n    }else{\n        disabled_val = true\n    }\n\n    return (\n        <Box mt=\"60px\" w=\"80%\" ml=\"auto\" mr=\"auto\" fontFamily=\"Lato\">  \n            <Heading fontFamily=\"Raleway\" mb=\"15px\">Please Add a Restaurant/Grocery!</Heading>\n            {errors.map(error => <Text color=\"red\">{error}</Text>)}\n            <form id=\"new-food-form\" onSubmit={handleNewFoodSubmit}>\n                <FormControl isRequired>\n                    <FormLabel>Name</FormLabel>\n                    <Input backgroundColor=\"white\" name=\"name\" placeholder=\"Enter name of the place\" onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}/>\n                </FormControl>\n                <FormControl isRequired w=\"300px\" mt=\"10px\">\n                    <FormLabel>Address</FormLabel>\n                    <Input backgroundColor=\"white\" name=\"address\" placeholder=\"Enter the address\" onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}/>\n                </FormControl>\n                <FormControl isRequired w=\"300px\" mt=\"10px\">\n                    <FormLabel>Website</FormLabel>\n                    <Input backgroundColor=\"white\" name = \"website\" placeholder=\"Enter the website\" onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: addhttp(e.target.value)})}/>\n                </FormControl>\n                <FormControl isRequired w=\"300px\" mt=\"10px\">\n                    <FormLabel>Food Type</FormLabel>\n                    <Select backgroundColor=\"white\" name=\"food_type\" placeholder = 'Select the food type' onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}>\n                        <option value=\"African\">African</option>\n                        <option value=\"Asian\">Asian</option>\n                        <option value=\"American\">American</option>\n                        <option value=\"Bakery\">Bakery/Cafe</option>\n                        <option value=\"European\">European</option>\n                        <option value=\"Fast Food\">Fast Food</option>\n                        <option value=\"Grocery\">Grocery</option>\n                        <option value=\"Latin American\">Latin American</option>\n                        <option value=\"Mediterranean\">Mediterranean</option>\n                    </Select>\n                </FormControl>\n                <FormControl isRequired mt=\"10px\">\n                    <FormLabel>Description</FormLabel>\n                    <Textarea backgroundColor=\"white\" name = \"description\" placeholder=\"Enter a description\" onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}/>\n                    <FormHelperText>Minimum 50 characters</FormHelperText>\n                </FormControl>\n                <FormControl isRequired w=\"300px\" mt=\"10px\">\n                    <FormLabel>Picture</FormLabel>\n                    <Input backgroundColor=\"white\" name = \"pictures\" placeholder=\"Enter URL for picture\" onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: [e.target.value]})}/>\n                </FormControl>\n                {/* Disable button when not logged in */}\n                <Button colorScheme=\"blue\" mb=\"50px\" disabled={disabled_val} type=\"submit\" mt=\"15px\" >Submit</Button>\n            </form>\n    </Box>\n    )\n\n}\n\nexport default NewFoodForm","import {useHistory, useLocation} from 'react-router-dom'\nimport {Box, Image, Text, Flex, Icon} from '@chakra-ui/react'\nimport {BiUpvote, BiDownvote} from 'react-icons/bi'\n\nfunction LodgingCard({lodging}){\n\n    //refactor the lodging instance\n    const {id, name, upvote, downvote, image} = lodging\n\n    //create history to push\n    const history = useHistory()\n    const {pathname} = useLocation()\n\n    //create onclick to send to individual food page\n    function handleLodgingCardClick(){\n        if (pathname !== `/yosemite/lodging/${id}`){\n            history.push({pathname: `/yosemite/lodging/${id}`,\n                            state: {\n                            id: id\n                            }\n        })\n        }\n    }\n    \n    return (\n        <>\n        <Box w=\"calc(100% * (1/4) - 25px - 20px)\" fontFamily=\"Lato\" backgroundColor=\"white\" borderColor=\"black\" maxH=\"300px\" borderWidth='1px' borderRadius='lg' overflow='hidden' m='5' onClick={handleLodgingCardClick}>\n          <Image src={image} alt=\"Picture of lodging\" w=\"100%\" maxH=\"195px\" pl=\"10px\" pr=\"10px\" pt=\"10px\" borderRadius=\"20px\"/>\n            <Box mt=\"-15px\" p='6'>\n                {/* difficult + route_type + estimate_time */}\n\n                {/* title of the card */}\n                <Box\n                    mt='1'\n                    fontWeight='semibold'\n                    as='h4'\n                    lineHeight='tight'\n                    noOfLines={5}\n                    fontFamily=\"Raleway\"\n                    >\n                    {name}\n                </Box>\n                <Flex \n                    flexWrap=\"inline\"\n                    color='gray.500'\n                    fontWeight='semibold'\n                    letterSpacing='wide'\n                    fontSize='sm'\n                    textTransform='uppercase'\n                    ml='0'\n                >\n                    <Flex>\n                        <Icon as={BiUpvote} mt=\"4px\"/>\n                        <Text>{upvote}</Text>\n                    </Flex>\n                    <Flex>\n                        <Icon as={BiDownvote} ml = \"15px\" mt=\"4px\"/>\n                        <Text >{downvote}</Text>\n                    </Flex>\n                    \n                </Flex>\n\n            </Box>\n        </Box>\n        </>\n    )\n}\n\nexport default LodgingCard","import {useEffect, useState} from 'react'\nimport {Flex, Heading} from '@chakra-ui/react'\nimport LodgingCard from './LodgingCard'\n\nfunction LodgingContainer(){\n\n    const [allLodging, setAllLodging] = useState([])\n    useEffect(()=> {\n        const getLodging = async () => {\n            let req = await fetch('/lodgings')\n\n            if (req.ok){\n                let res = await req.json()\n                console.log(res)\n                setAllLodging(res)\n            }else{\n                console.error(\"No data :(\")\n            }      \n        }\n        getLodging();\n    },[])\n    console.log(allLodging)\n\n    //create filter based off of upvote\n    if(allLodging.length > 0){\n        allLodging.sort(function(a,b) {\n            return parseInt(b.upvote) - parseInt(a.upvote)\n        })\n    }\n\n    return(\n        <>\n            <Heading mt=\"40px\" ml=\"25px\" fontFamily=\"Raleway\">Lodging at Yosemite!</Heading>\n            <Flex flexWrap=\"wrap\" justifyContent=\"left\" >\n                {allLodging.map(lodging => {\n                return <LodgingCard key={lodging.id} lodging={lodging} />\n                })}\n            </Flex>\n        </>\n    )\n\n}\n\nexport default LodgingContainer","import {useEffect, useState} from 'react'\nimport {useParams, useHistory} from 'react-router-dom'\nimport {Heading, Box, Image, Text, Flex, UnorderedList, ListItem, Spacer, Link, Divider, Avatar, Button, Icon, FormControl, Textarea, FormLabel} from '@chakra-ui/react'\nimport {FiExternalLink} from 'react-icons/fi'\nimport {BiUpvote, BiDownvote} from 'react-icons/bi'\nimport {FaStar, FaRegStar} from 'react-icons/fa'\nimport {GoogleMap, useLoadScript, Marker} from \"@react-google-maps/api\"\nimport '../lodgingpage.css'\n\n\nfunction LodgingPage({isLoggedIn}){\n    //get the id Data from the history push with UseLocation\n    //set the data for the lodging\n    const { id } = useParams()\n    //set usehistory to push later\n    const history = useHistory()\n\n    const [lodgingData, setLodgingData] = useState({\n        user_lodgings: [{reviews: '', user: {id: '',name: '', [\"favorite?\"]: ''}, lodging: {id: ''}}]\n    })\n\n    //set an on change state for when a review is typed in\n    const [reviewAdded, setReviewAdded] = useState()\n\n    //set state for clicking the favorite button\n    const [favClicked, setFavClicked] = useState(false)\n\n    //pull the lodging data for just the one lodging\n    useEffect(()=> {\n        const getLodging = async () => {\n            let req = await fetch(`/lodgings/${id}`);\n        \n            if (req.ok) {\n                let res = await req.json();\n                setLodgingData(res);\n            } else {\n                console.error(\"whoops\");\n            }\n            };\n            getLodging();\n    },[id])\n\n    //refactor the lodging data into its attributes \n    const {name, address, website, lodging_amenity, room_amenity, upvote, downvote, image, user_lodgings} = lodgingData\n\n    ///////////////////////////////////  CREATING MAPS     /////////////////////////////////////////////////////////////\n    //hide the API key for google maps\n    const {isLoaded} = useLoadScript({googleMapsApiKey: process.env.REACT_APP_NEXT_PUBLIC_GOOGLE_MAPS_API_KEY})\n    \n    //create state to take in the lat and long of the address\n    const [latlong, setLatlong] = useState({lat: \"\", lng: \"\"})\n\n    //geocoder API call\n    useEffect(() => {\n        const data = async () => {\n            if(address){\n                let added_plus = address.split(' ').join('+')\n                let req = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?new_forward_geocoder=true&address=${added_plus}&key=${process.env.REACT_APP_NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}`);\n\n                if (req.ok){\n                    let res = await req.json()\n                    setLatlong(res.results[0].geometry.location)\n                }\n            }\n        } \n\n       data()\n    },[address])\n\n    //creating the google map\n    // const [map, setMap] = useState(<></>)\n \n    // console.log(latlong)\n    //creating the google map\n    let map\n    if(!isLoaded){\n        map = <div>Loading...</div>\n    }else if(isLoaded && latlong.lat && latlong.lng){\n        map = <GoogleMap zoom={13} center={{lat: latlong.lat, lng: latlong.lng}} mapContainerClassName=\"map-container\">\n\n            <Marker position={{lat: latlong.lat, lng: latlong.lng}} label=\"SL\"  />\n        </GoogleMap>\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////////\n\n    ///////////////////////  WEATHER API ////////////////////////////\n\n    const [weatherData, setWeatherData] = useState([])\n    useEffect(() => {\n        const getWeatherData = async() => {\n            let req = await fetch(`https://api.weather.gov/points/${latlong.lat},${latlong.lng}`);\n\n            if(req.ok){\n                let res = await req.json()\n                \n                const get_forecast = async() => {\n                    console.log(res)\n                    let w_req = await fetch(res.properties.forecast)    \n                \n                    if(w_req.ok){\n                        let data = await w_req.json()\n                        setWeatherData(data.properties.periods)\n                    }\n                }\n                get_forecast()\n            }\n        }\n        if(latlong.lat % 1 !== 0){\n            getWeatherData()\n        }\n\n        // if(!isLoaded){\n        //     setMap(<div>Loading...</div>)\n        // }else if(isLoaded && latlong.lat && latlong.lng){\n        //     setMap(<GoogleMap zoom={13} center={{lat: latlong.lat, lng: latlong.lng}} mapContainerClassName=\"map-container\">\n    \n        //         <Marker position={{lat: latlong.lat, lng: latlong.lng}} label=\"SL\"  />\n        //     </GoogleMap>)\n        // }\n            \n    },[latlong])\n\n    //weather JSX data\n    let weather = []\n    const current_date= new Date()\n    const current_hour = current_date.getHours()\n\n    \n    if(weatherData.length > 0){\n        //get every other weather data\n        let output = [...weatherData].map((n,index) => index % 2 === 0 ? n : null)\n        let temp_low = [...weatherData].map((n,index) => index % 2 !== 0 ? n : null)\n        let filtered_output = output.filter(el => el !== null)\n        let temp_low_filtered = temp_low.filter(el => el !== null)\n        //pop the last two for a five day forecase\n        filtered_output.pop()\n        filtered_output.pop()\n        temp_low_filtered.pop()\n        temp_low_filtered.pop()\n\n        \n        if(filtered_output && temp_low_filtered){\n            //if it's night time do temp_low_filtered first\n            if((current_hour >= 18 && current_hour <= 24) || (current_hour >=0 && current_hour <= 6)){\n                //map the JSX data\n                temp_low_filtered.pop()\n                temp_low_filtered.unshift(filtered_output[0])\n                weather = temp_low_filtered.map((day,index) => {\n                    return(\n                        <>\n                            <Box borderWidth=\"1px\" padding=\"5px\" borderColor=\"grey\" className=\"weather-box\" backgroundColor=\"white\">\n                                <Text textAlign=\"center\" >{day.name}</Text>\n                                <Image src = {day.icon} w=\"90px\" borderRadius=\"10px\" ml=\"auto\" mr=\"auto\"/>\n                                <Flex flexWrap=\"inline\">\n                                    <Text color=\"grey\"  pr=\"5px\">{day.temperature} F</Text>\n                                    <Spacer />\n                                    <Text color=\"grey\"  pl=\"5px\">{filtered_output[index].temperature} F</Text>\n                                </Flex>\n                            </Box>\n                        </>\n                    )\n                })\n            }else{\n                //map the JSX data\n                weather = filtered_output.map((day,index) => {\n                    return(\n                        <>\n                            <Box borderWidth=\"1px\" padding=\"5px\" borderColor=\"grey\" className=\"weather-box\" backgroundColor=\"white\"> \n                                <Text textAlign=\"center\" >{day.name}</Text>\n                                <Image src = {day.icon} w=\"90px\" borderRadius=\"10px\" ml=\"auto\" mr=\"auto\"/>\n                                <Flex flexWrap=\"inline\">\n                                    <Text color=\"grey\"  pl=\"5px\">{day.temperature} F</Text>\n                                    <Spacer />\n                                    <Text color=\"grey\"  pr=\"5px\">{temp_low_filtered[index].temperature} F</Text>\n                                </Flex>\n                            </Box>\n                        </>\n                    )\n                })\n            }\n        }\n    }\n    \n    /////////////////////////////////////////////////////////////////\n    //on click for the upvote\n    function handleUpvoteClick(){\n        //if you aren't logged in you get pushed to login\n        if(!isLoggedIn){\n            history.push('/login')\n        }\n\n        const user_id = localStorage.getItem(\"id\")\n        const configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json',\n            },\n            mode: \"cors\",\n            body: JSON.stringify({\n                user_id: user_id,\n                lodging_id: id\n            })\n        }\n\n    \n        fetch(`/user_lodgings/upvote`,configObj)\n            .then(res => res.json())\n            .then(data => {\n                if(data.error){\n                    console.log(data.error)\n                }else{\n                    setLodgingData(data)\n                }\n            })\n    }\n\n    //on click for the downvote\n    function handleDownvoteClick(){\n        //if you aren't logged in you get pushed to login\n        if(!isLoggedIn){\n            history.push('/login')\n        }\n\n        const user_id = localStorage.getItem(\"id\")\n        const configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json',\n            },\n            mode: \"cors\",\n            body: JSON.stringify({\n                user_id: user_id,\n                lodging_id: id\n            })\n        }\n\n    \n        fetch(`/user_lodgings/downvote`,configObj)\n            .then(res => res.json())\n            .then(data => {\n                if(data.error){\n                    console.log(data.error)\n                }else{\n                    setLodgingData(data)\n                }\n            })\n    }\n\n    ////////////////////////////////     ADD/CHANGE User lodgings Table //////////////////////////////////////\n\n    //handle review change\n    function handleReviewChange(e){\n        setReviewAdded(e.target.value)\n    }\n\n    //handle adding a review if logged in\n    function handleAddReview(e){\n        e.preventDefault()\n        //reset the form fields\n        e.target.reset()\n        const user_id = localStorage.getItem(\"id\")\n        const configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                user_id: user_id,\n                lodging_id: id,\n                review: reviewAdded,\n            })\n        }\n\n        fetch('/user_lodgings/', configObj)\n        .then(res => res.json())\n        .then(data => {\n            let filter_id\n            if(data.id){\n                filter_id = data.id\n            }else{\n                filter_id = data[0].id\n            }\n         \n            //see if this user trail table/data exists already\n            let filteredIndex\n            let filtered_data = lodgingData.user_lodgings.filter((ul,index) => {\n                \n                if(ul.id === filter_id){\n                    filteredIndex = index\n                }\n                \n                return ul.id === filter_id})\n  \n            //if it exists, replace the old isntance and replace with the new instance\n            if(filtered_data.length > 0) {\n                let mutable_lodgingData = {...lodgingData}\n                mutable_lodgingData.user_lodgings.splice(+filteredIndex,1)\n                filtered_data[0][\"review\"]=reviewAdded\n                mutable_lodgingData.user_lodgings.push(filtered_data[0])\n                setLodgingData(mutable_lodgingData)\n            //if it doesn't exist, add the new instance\n            }else{\n                let mutable_lodgingData = {...lodgingData}\n                mutable_lodgingData.user_lodgings.push(data)\n                setLodgingData(mutable_lodgingData)\n            }\n        })\n    }\n\n     //handle clicking the favorite button\n     function handleFavClick(){\n        //if you aren't logged in you get pushed to login\n        if(!isLoggedIn){\n            history.push('/login')\n        }\n\n        if(isLoggedIn){\n            setFavClicked(prev => !prev)\n        \n        \n            const user_id = localStorage.getItem(\"id\")\n\n            //need bang operator since state change is async\n            const configObj = {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    user_id: user_id,\n                    lodging_id: id,\n                    \"favorite?\": !favClicked\n                })\n            }\n\n            fetch('/user_lodgings', configObj)\n                .then(res => res.json())\n                .then(data => {\n                    \n                    let filter_id = data.id\n                    let filteredIndex\n                    let filtered_data = lodgingData.user_lodgings.filter((ul,index)=> {\n                        if(ul.id === filter_id){\n                            filteredIndex = index\n                        }\n                        return ul.id === filter_id\n                    })\n\n                    let mutable_lodgingData = {...lodgingData}\n                    if(filtered_data.length > 0){\n                        mutable_lodgingData.user_lodgings.splice(+filteredIndex,1)\n                        filtered_data[0][\"favorite?\"] = !favClicked\n                        mutable_lodgingData.user_lodgings.push(filtered_data[0])\n                        setLodgingData(mutable_lodgingData)\n                    }else{\n                        mutable_lodgingData.user_lodgings.push(data)\n                        setLodgingData(mutable_lodgingData)\n                    }\n                })\n        }\n    }\n\n    \n \n\n    //////////////// see if favorite already clicked ///////////////////////\n    const [alreadyClicked, setAlreadyClicked] = useState(false)\n\n    //check to see if favorite has already been clicked\n    useEffect(() => {\n        let found = findFirstTime()\n        setAlreadyClicked(found)\n        setFavClicked(found)\n    },[lodgingData])\n\n    //find first instance of favorite click\n    function findFirstTime(){\n        const user_id = localStorage.getItem(\"id\")\n        //if user lodgings attribute exists and you're logged in \n        if(user_lodgings && isLoggedIn){\n            let find_ul = user_lodgings.filter(ul => {\n                return +ul.user.id === +user_id && +ul.lodging.id === +id})\n            if(find_ul.length > 0){\n                if(find_ul[0][\"favorite?\"] === true){\n                    return true\n                }else{\n                    return false\n                }\n            }else{\n                return false\n            }\n        }\n    }\n\n    //map out the reviews with the user name\n    let reviews = []\n    if(user_lodgings){\n        reviews = user_lodgings.sort(function(a,b) {\n            let a_date = new Date(a.updated_at)\n            let b_date = new Date(b.updated_at)\n            \n            return b_date - a_date\n        \n        }).map(ul => {\n            if(ul[\"review\"]){\n                return (\n                    <>\n                    <Divider mt=\"15px\"/>\n                    <Box mt=\"25px\"  mb=\"25px\" fontFamily=\"Lato\">\n                        <Flex flexWrap=\"inline\">\n                            <Avatar name={ul.user.name} src='https://bit.ly/broken-link' />\n                            <Text mt=\"1%\" ml=\"10px\">{ul.user.name}</Text>\n                        </Flex>\n                        <Text mt=\"15px\">{ul[\"review\"]}</Text>\n                    </Box>\n                    {/* <Divider mt=\"25px\"/> */}\n                    </>\n                )\n            }\n        })\n    }\n\n\n    return (\n        <>\n            <Flex flexWrap=\"inline\" justifyContent=\"center\" mt=\"15px\" fontFamily=\"Lato\">\n                {weather}\n            </Flex>\n            <Box mt=\"40px\" ml = \"25px\" w=\"85%\" fontFamily=\"Lato\">\n                <Flex w=\"100%\" justifyContent=\"right\">\n                    <Heading fontFamily=\"Raleway\" w=\"80%\">{name}</Heading>\n                    <Flex w=\"20%\" justifyContent=\"right\">\n                        <Flex flexWrap=\"inline\" mt=\"auto\" mb=\"auto\">\n                                <Icon as={BiUpvote} mr=\"10px\" mt = \"5px\" onClick={handleUpvoteClick}/> \n                                <Text>{upvote}</Text>\n                            </Flex>\n                            <Flex flexWrap=\"inline\" mt=\"auto\" mb=\"auto\" ml=\"20px\">\n                                <Icon as={BiDownvote} mr=\"10px\" mt = \"5px\" onClick={handleDownvoteClick}/> \n                                <Text>{downvote}</Text>\n                            </Flex>\n                            <Flex mt=\"auto\" mb=\"auto\" ml=\"20px\" onClick={handleFavClick}>\n                                {favClicked || alreadyClicked ? <Icon as={FaStar} /> : <Icon as={FaRegStar} />}\n                        </Flex>\n                    </Flex>\n                </Flex>\n                \n                \n               <Flex wrap=\"inline\" >\n                    <Image src={image} w=\"60%\" borderRadius=\"20px\" minH = \"350px\" maxH = \"37px\" maxW=\"800px\" mt=\"auto\" mb=\"auto\" />\n                    <Box w=\"40%\" pl=\"20px\" mt=\"auto\" mb=\"auto\">\n                        {map}\n                    </Box>\n                    \n               </Flex>\n                \n                <Box\n                        color='gray.500'\n                        fontWeight='semibold'\n                        letterSpacing='wide'\n                        fontSize='sm'\n                        ml='0'\n                        mt=\"-15px\"\n                    >\n                        <Flex flexWrap=\"inline\"> \n                            <Text>{address}</Text>  \n                        </Flex>\n                        <Flex flexWrap=\"inline\" color=\"blue\">\n                            <Link href={website} isExternal>\n                                Book Today!\n                            </Link>\n                            <FiExternalLink mx=\"2px\"/>\n                        </Flex>\n                </Box>\n                <Flex flexWrap=\"inline\" mt=\"15px\">\n                    <Box>\n                        <Text fontWeight=\"semibold\">Lodging Amenity</Text>\n                        <UnorderedList>\n                            {lodging_amenity ? lodging_amenity.map(amenity => {\n                                return <ListItem>{amenity}</ListItem>\n                            }) : null    \n                            }\n                        </UnorderedList>\n                    </Box>\n                    <Box ml=\"10%\">\n                        <Text fontWeight=\"semibold\">Room Amenity</Text>\n                        <UnorderedList>\n                            {room_amenity ? room_amenity.map(amenity => {\n                                return <ListItem>{amenity}</ListItem>\n                            }) : null    \n                            }\n                        </UnorderedList> \n                    </Box>\n                </Flex>\n                \n            \n\n                {/* If logged in you can leave a review */}\n                {isLoggedIn ? \n                    <>\n                        <form onSubmit={handleAddReview} >\n                            <Box w=\"80%\" ml=\"auto\" mr=\"auto\" mt=\"50px\">\n                                <FormControl isRequired  >\n                                    <FormLabel>Add a Review!</FormLabel>\n                                    <Textarea onChange={handleReviewChange} borderColor=\"black\" backgroundColor=\"white\"></Textarea>            \n                                </FormControl>\n                                <Button type=\"submit\" float=\"right\" mt=\"10px\"  mb=\"50px\">Submit</Button>\n                            </Box>\n                        </form>\n                    </>\n            \n                : null}\n\n                {/* Add user reviews */}\n                <Text fontSize='2xl' fontWeight=\"semibold\" mt=\"50px\" >User Reviews</Text>\n                {reviews}\n            </Box>\n\n        </>\n    )\n}\n\nexport default LodgingPage","import {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {Input, Button, Heading, FormControl, FormLabel, Box, Stack, Checkbox, CheckboxGroup, Text, Flex, FormErrorMessage, FormHelperText} from '@chakra-ui/react'\n\nfunction NewLodgingForm({isLoggedIn}){\n    //set error for filling out the new food form\n    const [errors, setErrors] = useState([])\n\n    //set const for lodging amenity check\n    const [checkedLAmenity, setCheckedLAmenity] = useState([])\n    //set const for romm amenity check\n    const [checkedRAmenity, setCheckedRAmenity] = useState([])\n\n    //set const for all inputs\n    const [allInputs, setAllInputs] = useState({lodging_amenity: []})\n\n    let history = useHistory()\n\n    //prepend website with https:// if not already present\n    function addhttp(url) {\n        if (!/^(?:f|ht)tps?\\:\\/\\//.test(url)) {\n            url = \"http://\" + url;\n        }\n        return url;\n    }\n\n    function array_maker(string){\n        let arr = string.split(\",\")\n        return arr\n    }\n\n   \n    const handleNewLodgingSubmit = async (e) => {\n        e.preventDefault()\n\n        let req = await fetch(\"/lodgings\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(allInputs)\n        })\n        if(req.ok){\n            setErrors(['Thanks for successfully submitting!'])\n            let res = req.json()\n            console.log(res)\n        }else{\n            let res = await req.json()\n            let err_array = []\n\n            for(let i in res.errors) {\n                let message = `${i}: ${res.errors[i]}`\n                err_array.push(message)\n            }\n            setErrors(err_array)\n            }\n        history.push(\"/yosemite/lodging\")\n    }\n\n\n    //disable and enabel submit button based on login status\n    let disabled_val\n    if(isLoggedIn){\n        disabled_val = false\n    }else{\n        disabled_val = true\n    }\n\n    //handle onChange\n    \n    function handleLodgingAmenityChange(e){\n        if(!checkedLAmenity.includes(e.target.value)){\n\n            setCheckedLAmenity([...checkedLAmenity,e.target.value])\n            setAllInputs({...allInputs, \"lodging_amenity\":[...checkedLAmenity,e.target.value]})\n        }else{\n\n            setCheckedLAmenity([...checkedLAmenity].filter(amenity => amenity !== e.target.value))\n            setAllInputs({...allInputs, \"lodging_amenity\":[...checkedLAmenity].filter(amenity => amenity !== e.target.value)})\n        }\n    }\n\n    function handleRoomAmenityChange(e){\n        if(!checkedRAmenity.includes(e.target.value)){\n\n            setCheckedRAmenity([...checkedRAmenity,e.target.value])\n            setAllInputs({...allInputs, \"room_amenity\":[...checkedRAmenity,e.target.value]})\n        }else{\n\n            setCheckedRAmenity([...checkedRAmenity].filter(amenity => amenity !== e.target.value))\n            setAllInputs({...allInputs, \"room_amenity\":[...checkedRAmenity].filter(amenity => amenity !== e.target.value)})\n        }\n\n    }\n\n    \n    return (\n        <Box mt=\"60px\" w=\"80%\" ml=\"auto\" mr=\"auto\" fontFamily=\"Lato\">  \n            <Heading mb=\"15px\" fontFamily=\"Raleway\">Please Add a Lodging!</Heading>\n            {errors.map(error => <Text color=\"red\">{error}</Text>)}\n            <form id=\"new-lodging-form\" onSubmit={handleNewLodgingSubmit}>\n                <FormControl isRequired>\n                    <FormLabel>Name</FormLabel>\n                    <Input w=\"600px\" backgroundColor=\"white\" name=\"name\" placeholder=\"Enter name of the place\" onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}/>\n                </FormControl>\n                <FormControl isRequired w=\"300px\" mt=\"10px\">\n                    <FormLabel>Address</FormLabel>\n                    <Input backgroundColor=\"white\" name=\"address\" placeholder=\"Enter the address\" onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}/>\n                </FormControl>\n                <FormControl isRequired w=\"300px\" mt=\"10px\">\n                    <FormLabel>Website</FormLabel>\n                    <Input backgroundColor=\"white\" name = \"website\" placeholder=\"Enter the website\" onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}/>\n                </FormControl>\n                <Flex mt=\"15px\">\n                    <FormControl>\n                        <FormLabel>Lodging Amenity</FormLabel>\n                        <Stack >\n                            <CheckboxGroup >\n                                <Checkbox borderColor=\"black\" name = \"room_service\" value=\"Room Service\" onChange={handleLodgingAmenityChange}>Room Service</Checkbox>\n                                <Checkbox borderColor=\"black\" name = \"dining\" value=\"Dining\" onChange={handleLodgingAmenityChange}>Dining</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Free Guest Parking\" onChange={handleLodgingAmenityChange}>Free Guest Parking</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Valet\" onChange={handleLodgingAmenityChange}>Valet</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Gift Shop\" onChange={handleLodgingAmenityChange}>Gift Shop</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"ADA Accessible\" onChange={handleLodgingAmenityChange}>ADA Accessible</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Golf Course\" onChange={handleLodgingAmenityChange}>Golf Course</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Swimming Pool\" onChange={handleLodgingAmenityChange}>Swimming Pool</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Non Smoking\" onChange={handleLodgingAmenityChange}>Non Smoking</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Concierge\" onChange={handleLodgingAmenityChange}>Concierge</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Shuttle Access\" onChange={handleLodgingAmenityChange}>Shuttle Access</Checkbox>\n                            </CheckboxGroup>\n                        </Stack>\n                    </FormControl>\n                    <FormControl>\n                        <FormLabel>Room Amenity</FormLabel>\n                        <Stack >\n                            <CheckboxGroup >\n                                <Checkbox borderColor=\"black\" value=\"Hair Dryer\" onChange={handleRoomAmenityChange}>Hair Dryer</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Room Service\" onChange={handleRoomAmenityChange}>Room Service</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Private Room\" onChange={handleRoomAmenityChange}>Private Room</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Shared Room\" onChange={handleRoomAmenityChange}>Shared Room</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Rollaway Crib\" onChange={handleRoomAmenityChange}>Rollaway Crib</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Non-Smoking\" onChange={handleRoomAmenityChange}>Non-Smoking</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Iron/Ironing Board\" onChange={handleRoomAmenityChange}>Iron/Ironing Board</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Flat Screen TV\" onChange={handleRoomAmenityChange}>Flat Screen TV</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Mini Fridge\" onChange={handleRoomAmenityChange}>Mini Fridge</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"No Pets Allowed\" onChange={handleRoomAmenityChange}>No Pets Allowed</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Toiletries\" onChange={handleRoomAmenityChange}>Toiletries</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Balcony/Patio\" onChange={handleRoomAmenityChange}>Balcony/Patio</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Daily Housekeeping\" onChange={handleRoomAmenityChange}>Daily Housekeeping</Checkbox>\n                                <Checkbox borderColor=\"black\" value=\"Telephone\" onChange={handleRoomAmenityChange}>Telephone</Checkbox>\n                            </CheckboxGroup>\n                        </Stack>\n                    </FormControl>\n                </Flex>\n                <FormControl isRequired  mt=\"10px\">\n                    <FormLabel>Picture</FormLabel>\n                    <Input backgroundColor=\"white\" name = \"image\" placeholder=\"Enter URL for picture\" onChange={(e)=> setAllInputs({...allInputs, [e.target.name]: e.target.value})}/>\n                </FormControl>\n                {/* Disable button when not logged in */}\n                <Button colorScheme=\"blue\" disabled={disabled_val} type=\"submit\" mt=\"15px\" mb=\"50px\">Submit</Button>\n            </form>\n    </Box>\n    )\n}\n\nexport default NewLodgingForm","import { useEffect, useState } from \"react\"\nimport {useHistory} from 'react-router-dom'\nimport {Grid, GridItem, Avatar, Text, Box, Flex, Heading, Image, Accordion, AccordionItem, AccordionButton, AccordionPanel, AccordionIcon} from '@chakra-ui/react'\nimport '../user.css'\n\nfunction UserPage(){\n    //create state for storing all user data\n    const [userData, setUserData] = useState({\n        user_trails: [],\n        user_foods: [],\n        user_lodgings: []\n    })\n\n    //create history\n    const history = useHistory()\n\n    //push function\n    function handlePlaceClick(id,type){\n        if(type === 'food'){\n            history.push(`/yosemite/food/${id}`)\n        }else if(type === \"lodging\"){\n            history.push(`/yosemite/lodging/${id}`)\n        }else if(type === \"trails\"){\n            history.push(`/yosemite/trails/${id}`)\n        }\n    }\n\n    //fetch specific user data\n    useEffect(()=> {\n        let user_id = localStorage.getItem(\"id\")\n        const getUser = async () => {\n        let req = await fetch(`/users/${user_id}`)\n\n        if (req.ok) {\n            let res = await req.json()\n            setUserData(res)\n        }else{\n            console.error(\"whoops\")\n        }}\n        getUser()\n    },[])\n\n    const {email, name, user_foods, user_lodgings, user_trails, created_at} = userData\n\n    //calculate days you've been a member\n    const current = new Date()\n    const created_at_date = new Date(created_at)\n    // const created_at_date = new Date(98, 1)\n\n    const time_diff = (current - created_at_date)\n    const days_since_created = Math.round(time_diff/(1000*60*60*24))\n    \n    let timeMessage\n    if(days_since_created===0){\n        timeMessage = '< 1 day'\n    }else if(days_since_created< 365){\n        timeMessage = `${days_since_created} days`\n    }else if (days_since_created%365 === 0){\n        timeMessage = `${days_since_created/365} year(s)`\n    }else{\n        let years = Math.floor(days_since_created/365)\n        let days = days_since_created%365\n        timeMessage = `${years} year(s) and ${days} day(s)`\n    }\n\n    //filter for just favorites\n    let user_foods_fav_filtered = [...user_foods].filter(uf => uf[\"favorite?\"] === true)\n    let user_lodgings_fav_filtered = [...user_lodgings].filter(ul => ul[\"favorite?\"] === true)\n    let user_trails_fav_filtered = [...user_trails].filter(ut => ut[\"favorite?\"] === true)\n\n    //filter for those with reviews\n    let user_foods_review_filter = [...user_foods].filter(uf => uf[\"review\"])\n    let user_lodgings_review_filter = [...user_lodgings].filter(ul => ul[\"review\"])\n    let user_trails_review_filter = [...user_trails].filter(ut => ut[\"review\"])\n    ////////////////////////////////////////////////////////////////////////////////////////\n\n    return (\n        <>\n        <Box w=\"80%\" mt=\"40px\" ml=\"auto\" mr=\"auto\">\n            <Box textAlign=\"center\">\n                <Avatar name = {name} src=\"https://bit.ly/broken-link\" />\n                <Text>{name}</Text>\n                <Text>{email}</Text>\n                <Text>Member since: {timeMessage}</Text>\n            </Box>\n\n            {/* accordion for all favorites */}\n            <Accordion defaultIndex={[0]} allowMultiple mt=\"50px\">\n                <AccordionItem>\n                        <AccordionButton>\n                            <Flex w=\"100%\">\n                                <Heading textAlign=\"left\" size=\"md\" w=\"60%\">Favorites</Heading>\n                                <Text w = \"40%\">Click to see your favorites!</Text>\n                            </Flex>\n                            \n                            <AccordionIcon />\n                        </AccordionButton>\n                    <Grid templateColumns=\"repeat(3, 1fr)\" gap={6}>\n\n                        {userData ? \n                            user_foods_fav_filtered.map(uf => {\n                                return (\n                                    <div>\n                                        {uf[\"favorite?\"]===true ? \n                                            <GridItem className=\"user-card\" onClick={()=>handlePlaceClick(uf.food.id,'food')}>\n                                                <AccordionPanel>\n                                                    <Text  noOfLines={1} fontSize=\"lg\" fontWeight = \"semibold\" key={uf.id}>{uf.food.name}</Text> \n                                                    <Image className=\"place-image\" src={uf.food.pictures[0]} alt=\"User Food\"/>\n                                                </AccordionPanel>\n                                            </GridItem>\n                                        : null}\n                                    </div>\n                                )\n                            })\n                        : null}\n                                        {userData ? \n                        user_lodgings_fav_filtered.map(ul => {\n                            return (\n                            <div >\n                                {ul[\"favorite?\"]===true  ?\n                                    <GridItem className=\"user-card\" onClick={()=>handlePlaceClick(ul.lodging.id,'lodging')}>\n                                        <AccordionPanel>\n                                            <Text noOfLines={1} fontSize=\"lg\" fontWeight = \"semibold\" key={ul.id}>{ul.lodging.name}</Text> \n                                            <Image className=\"place-image\" src={ul.lodging.image} alt=\"User Lodging\" />\n                                        </AccordionPanel>\n                                    </GridItem>\n                                : null}\n                            </div>\n                            )\n                        })\n                        : null}\n                        {userData ? \n                            user_trails_fav_filtered.map(ut => {\n                                return (\n                                <div >\n                                    {ut[\"favorite?\"]===true  ?\n                                        <GridItem className=\"user-card\" onClick={()=>handlePlaceClick(ut.trail.id,'trails')}>\n                                            <AccordionPanel>\n                                                {/* <Divider /> */}\n                                                <Text noOfLines={1} fontSize=\"lg\" fontWeight = \"semibold\" key={ut.id}>{ut.trail.name}</Text> \n                                                <Image className=\"place-image\" src={ut.trail.pictures[0]} alt=\"User User Trail\" />\n                                            </AccordionPanel>\n                                        </GridItem>\n                                    : null}\n                                </div>\n                                )\n                            })\n                        : null}\n                    </Grid>\n                </AccordionItem>\n            </Accordion>\n\n            {/* accordion for user_trails */}\n            <Accordion allowMultiple mt=\"50px\">\n                <AccordionItem>\n                    <AccordionButton>\n                        <Flex w=\"100%\">\n                            <Heading textAlign=\"left\" size=\"md\" w=\"60%\">Trail Reviews</Heading>\n                            <Text w = \"40%\">Click to see your reviews!</Text>\n                        </Flex>\n                        \n                        <AccordionIcon />\n                    </AccordionButton>\n                    <Grid templateColumns=\"repeat(3, 1fr)\" gap={6}>\n                        {userData ? \n                            user_trails_review_filter.map(ut => {\n                                return (\n                                <>\n                                    {ut[\"review\"] ?\n                                        <GridItem onClick={()=>handlePlaceClick(ut.trail.id,'trails')}>\n                                            <AccordionPanel>\n                                                <Text noOfLines={1} fontSize=\"lg\" fontWeight = \"semibold\" key={ut.id}>{ut.trail.name}</Text> \n                                                <Text noOfLines={1} >{ut[\"review\"]}</Text>\n                                                <Image className=\"place-image\" src={ut.trail.pictures[0]} alt=\"User Trail\"/>\n                                            </AccordionPanel>\n                                        </GridItem>\n                                    : null}\n                                </>\n                                )\n                            })\n                        : null}\n                    </Grid>\n                </AccordionItem>\n            </Accordion>\n\n            {/* accordion for user_lodgings */}\n            <Accordion  allowMultiple>\n                <AccordionItem>\n                    <h2>            \n                        <AccordionButton>\n                            <Flex w=\"100%\">\n                                <Heading textAlign=\"left\" size=\"md\" w=\"60%\">Lodging Reviews</Heading>\n                                <Text w = \"40%\">Click to see your reviews!</Text>\n                            </Flex>\n                            \n                            <AccordionIcon />\n                        </AccordionButton>\n                    </h2>\n                <Grid templateColumns=\"repeat(3, 1fr)\" gap={6}> \n                    {userData ? \n                        user_lodgings_review_filter.map(ul => {\n                            return (\n                            <>\n                                {ul[\"review\"] ?\n                                    <GridItem onClick={()=>handlePlaceClick(ul.lodging.id,'lodging')}>\n                                        <AccordionPanel>\n                                            <Text noOfLines={1} fontSize=\"lg\" fontWeight = \"semibold\" key={ul.id}>{ul.lodging.name}</Text> \n                                            <Text noOfLines={1}>{ul[\"review\"]}</Text>\n                                            <Image className=\"place-image\" src={ul.lodging.image} alt=\"User Lodging\"/>\n                                        </AccordionPanel>\n                                    </GridItem>\n                                : null}\n                            </>\n                            )\n                        })\n                    : null}\n                </Grid>\n                </AccordionItem>\n            </Accordion>\n\n            {/* accordion for user_foods */}\n            <Accordion allowMultiple mb=\"50px\">\n                <AccordionItem>\n                    <AccordionButton>\n                        <Flex w=\"100%\">\n                            <Heading textAlign=\"left\" size=\"md\" w=\"60%\">Food Reviews</Heading>\n                            <Text w = \"40%\">Click to see your reviews!</Text>\n                        </Flex>\n                        \n                        <AccordionIcon />\n                    </AccordionButton>\n                <Grid templateColumns=\"repeat(3, 1fr)\" gap={6}>\n                    {userData ? \n                        user_foods_review_filter.map(uf => {\n                            return (\n                            <>\n                                {uf[\"review\"] ? \n                                    <GridItem onClick={()=>handlePlaceClick(uf.food.id,'food')}>\n                                        <AccordionPanel>\n                                            <Text noOfLines={1} fontSize=\"lg\" fontWeight = \"semibold\" key={uf.id}>{uf.food.name}</Text> \n                                            <Text noOfLines={1}>{uf[\"review\"]}</Text>\n                                            <Image className=\"place-image\" src={uf.food.pictures[0]} alt=\"User Food\"/>\n                                        </AccordionPanel>\n                                    </GridItem>\n                                : null}\n                            </>\n                            )\n                        })\n                    : null}\n                </Grid>\n                </AccordionItem>\n            </Accordion>\n        </Box>\n        </>\n    )\n}\n\nexport default UserPage","export default __webpack_public_path__ + \"static/media/park_guide.47a720d9.svg\";","export default __webpack_public_path__ + \"static/media/yosemite1.4158bf41.jpg\";","export default __webpack_public_path__ + \"static/media/yosemite2.450afa36.jpg\";","export default __webpack_public_path__ + \"static/media/great_smokey2.2e893779.jpg\";","export default __webpack_public_path__ + \"static/media/shenandoah.8f23e0a3.jpg\";","export default __webpack_public_path__ + \"static/media/grand_canyon.3ee6f15c.jpg\";","export default __webpack_public_path__ + \"static/media/zion.80e0231c.jpg\";","import logo from '../park_guide.gif'\nimport logo2 from '../park_guide.svg'\nimport yosemite from '../yosemite1.jpg'\nimport yosemite2 from '../yosemite2.jpg'\nimport great_smokey from '../great_smokey2.jpg'\nimport shenandoah from '../shenandoah.jpg'\nimport grand_canyon from '../grand_canyon.jpg'\nimport zion from '../zion.jpg'\nimport {Box, Text, Heading, Flex, Image} from '@chakra-ui/react'\nimport '../about.css'\n\nfunction About(){\n    \n    return (\n        <Box>\n            <div className=\"about-title-container\">\n                <Text className=\"about-title\" fontSize=\"6xl\">Welcome to Park Guide</Text>\n            </div>\n            <Box >\n                <Flex ml=\"25px\" w=\"95%\">\n                    <Text className = \"about-text\" w=\"50%\" mt=\"auto\" mb=\"auto\" >Park Guide aims to consolidate all the information you would need to visit a national park! Our mission is to help minimize the tabs that you have open when figuring out what to do at a national park. Nobody wants to have to read through twenty blogs, another five websites, or even books about a travel desination. Who wants to stress about a trip when it's supposed to be relaxing? We want you to connect with nature as soon as possible without all the hassle that usually comes with planning a trip. </Text>\n                    <Image w=\"50%\" src={logo2} alt=\"logo\" ml=\"auto\" mr=\"auto\" className=\"about-logo\"></Image>\n                </Flex>\n                <Flex ml=\"25px\">\n                    <Image w=\"50%\" borderRadius=\"10px\" src = {yosemite2} className=\"yosemite-img-2\" ></Image>\n                    <Image w=\"50%\" borderRadius=\"10px\" src= {yosemite} className=\"yosemite-img-1\" position=\"absolute\"></Image>\n                    <Text w=\"50%\" mt=\"auto\" mb=\"auto\" textAlign=\"center\" padding=\"15px\" fontSize=\"3xl\" className=\"about-text2\">\n                        Come check out all the national parks that the US has to offer!\n                    </Text>\n                </Flex>\n            </Box>\n            <Box mt=\"50px\" mb=\"50px\"> \n                <Text textAlign=\"center\" className=\"about-heading\" fontSize=\"5xl\">Here are some National Parks!</Text>\n                <Flex>     \n                    <Flex flexWrap=\"wrap\" mt=\"20px\" className=\"wrapper\">\n                        <Image src={shenandoah} alt=\"Shanandoah\" className=\"hover\" />\n                        <p className=\"hide\">Shenandoah National Park</p>\n                    </Flex>\n                    <Flex flexWrap=\"wrap\" mt=\"20px\" className=\"wrapper\">\n                        <Image src={great_smokey} alt=\"Great Smokey\" className=\"hover\" />\n                        <p className=\"hide\">Great Smokey Mountains National Park</p>\n                    </Flex>\n                    <Flex flexWrap=\"wrap\" mt=\"20px\" className=\"wrapper\">\n                        <Image src={grand_canyon} alt=\"Grand Canyon\" className=\"hover\" />\n                        <p className=\"hide\">Grand Canyon National Park</p>\n                    </Flex>\n                    <Flex flexWrap=\"wrap\" mt=\"20px\" className=\"wrapper\">\n                        <Image src={zion} alt=\"Zion\" className=\"hover\" />\n                        <p className=\"hide\">Zion National Park</p>\n                    </Flex>\n                </Flex>\n            </Box>\n        </Box>\n    )\n}\n\nexport default About","export default __webpack_public_path__ + \"static/media/yosemite6.52b8bd4d.jpg\";","import { Box, Text, Heading, Grid, GridItem, Image, OrderedList, List, ListItem, ListIcon } from '@chakra-ui/react'\nimport { useEffect } from 'react'\nimport '../yosemite.css'\nimport yosemite1 from '../yosemite6.jpg'\nimport '../yosemite_test.scss'\nimport {FaMountain} from 'react-icons/fa'\n\nfunction Yosemite(){\n\n    //credit to https://codepen.io/jackrugile/pen/nKKwQe for the waterfall animation and the css\n    useEffect(()=> {\n\n        \n        var waterfallCanvas = function(c, cw, ch){\n                    \n                var _this = this;\n                this.c = c;\n                this.ctx = c.getContext('2d');\n                this.cw = cw;\n                this.ch = ch;\t\t\t\n                \n                this.particles = [];\n                this.particleRate = 6;\n                this.gravity = .15;\n                                \n\n                this.init = function(){\t\t\t\t\n                    this.loop();\n                };\n                \n                this.reset = function(){\t\t\t\t\n                    this.ctx.clearRect(0,0,this.cw,this.ch);\n                    this.particles = [];\n                };\n                            \n                this.rand = function(rMi, rMa){return ~~((Math.random()*(rMa-rMi+1))+rMi);};\n                \n\n                this.Particle = function(){\n                    var newWidth = _this.rand(1,20);\n                    var newHeight = _this.rand(1, 45);\n                    this.x = _this.rand(10+(newWidth/2), _this.cw-10-(newWidth/2));\n                    this.y = -newHeight;\n                    this.vx = 0;\n                    this.vy = 0;\n                    this.width = newWidth;\n                    this.height = newHeight;\n                    this.hue = _this.rand(200, 220);\n                    this.saturation = _this.rand(30, 60);\n                    this.lightness = _this.rand(30, 60);\n                };\n                \n                this.Particle.prototype.update = function(i){\n                    this.vx += this.vx; \n                    this.vy += _this.gravity;\n                    this.x += this.vx;\n                    this.y += this.vy;\t\t\t\t\t\t\t\n                };\n                \n                this.Particle.prototype.render = function(){\t\t\t\n                    _this.ctx.strokeStyle = 'hsla('+this.hue+', '+this.saturation+'%, '+this.lightness+'%, .05)';\n                    _this.ctx.beginPath();\n                    _this.ctx.moveTo(this.x, this.y);\n                    _this.ctx.lineTo(this.x, this.y + this.height);\n                    _this.ctx.lineWidth = this.width/2;\n                    _this.ctx.lineCap = 'round';\n                    _this.ctx.stroke();\n                };\n                \n                this.Particle.prototype.renderBubble = function(){\t\t\t\t\n                    _this.ctx.fillStyle = 'hsla('+this.hue+', 40%, 40%, 1)';\n                    _this.ctx.fillStyle = 'hsla('+this.hue+', '+this.saturation+'%, '+this.lightness+'%, .3)';\n                    _this.ctx.beginPath();\n                    _this.ctx.arc(this.x+this.width/2, _this.ch-20-_this.rand(0,10), _this.rand(1,8), 0, Math.PI*2, false);\n                    _this.ctx.fill();\n                };\n                            \n                this.createParticles = function(){\n                    var i = this.particleRate;\n                    while(i--){\n                        this.particles.push(new this.Particle());\n                    }\n                };\n                \n                this.removeParticles = function(){\n                    var i = this.particleRate;\n                    while(i--){\n                        var p = this.particles[i];\n                        if(p.y > _this.ch-20-p.height){\n                            p.renderBubble();\n                            _this.particles.splice(i, 1);\n                        }\t\n                    }\n                };\n                                \n                this.updateParticles = function(){\t\t\t\t\t\n                    var i = this.particles.length;\t\t\t\t\t\t\n                    while(i--){\n                        var p = this.particles[i];\n                        p.update(i);\t\t\t\t\t\t\t\t\t\t\t\n                    };\t\t\t\t\t\t\n                };\n                \n                this.renderParticles = function(){\n                    var i = this.particles.length;\t\t\t\t\t\t\n                    while(i--){\n                        var p = this.particles[i];\n                        p.render();\t\t\t\t\t\t\t\t\t\t\t\n                    };\t\t\t\t\t\n                };\n                \n                this.clearCanvas = function(){\t\t\t\t\n                    this.ctx.globalCompositeOperation = 'destination-out';\n                    this.ctx.fillStyle = 'rgba(255,255,255,.06)';\n                    this.ctx.fillRect(0,0,this.cw,this.ch);\n                    this.ctx.globalCompositeOperation = 'lighter';\n                };\n                \n                this.loop = function(){\n                    var loopIt = function(){\t\t\t\t\t\n                        requestAnimationFrame(loopIt, _this.c);\t\t\t\t\t\n                            _this.clearCanvas();\t\t\t\t\t\n                            _this.createParticles();\t\t\t\t\t\n                            _this.updateParticles();\t\t\t\t\t\n                            _this.renderParticles();\t\n                            _this.removeParticles();\n                    };\n                    loopIt();\t\t\t\t\t\n                };\n            \n            };\n            \n        var isCanvasSupported = function(){\n            var elem = document.createElement('canvas');\n            return !!(elem.getContext && elem.getContext('2d'));\n        };\n\n        var setupRAF = function(){\n            var lastTime = 0;\n            var vendors = ['ms', 'moz', 'webkit', 'o'];\n            for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x){\n                window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n                window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];\n            };\n            \n            if(!window.requestAnimationFrame){\n                window.requestAnimationFrame = function(callback, element){\n                    var currTime = new Date().getTime();\n                    var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n                    var id = window.setTimeout(function() { callback(currTime + timeToCall); }, timeToCall);\n                    lastTime = currTime + timeToCall;\n                    return id;\n                };\n            };\n            \n            if (!window.cancelAnimationFrame){\n                window.cancelAnimationFrame = function(id){\n                    clearTimeout(id);\n                };\n            };\n        };\t\t\t\n\n        if(isCanvasSupported()){\n                var c = document.getElementById('waterfall');\n                var cw = c.width = 100;\n                var ch = c.height = 140;\t\n                var waterfall = new waterfallCanvas(c, cw, ch);\t\t\t  \n                setupRAF();\n                waterfall.init();\n        }\n    },[])\n\n    return (\n        <Box>\n            <div className=\"yosemite-title-container\">\n                <Text fontSize=\"5xl\" className=\"yosemite-title\">Yosemite National Park</Text>\n                <div className=\"bird-container bird-container--one\">\n                    <div className=\"bird bird--one\"></div>\n                </div>\n                \n                <div className=\"bird-container bird-container--two\">\n                    <div className=\"bird bird--two\"></div>\n                </div>\n                \n                <div className=\"bird-container bird-container--three\">\n                    <div className=\"bird bird--three\"></div>\n                </div>\n                \n                <div className=\"bird-container bird-container--four\">\n                    <div className=\"bird bird--four\"></div>\n                </div>\n            </div>\n            <Grid templateColumns=\"repeat(2, 1fr)\" gap={6}  p=\"40px\" className=\"yosemite-about\">\n                <GridItem mt=\"auto\" mb=\"auto\">                \n                    <Text className=\"yosemite-text\" p=\"10px\">\n                    Yosemite National Park is an American national park in California, surrounded on the southeast by Sierra National Forest and on the northwest by Stanislaus National Forest. The park is managed by the National Park Service and covers an area of 759,620 acres (1,187 sq mi; 3,074 km^2) and sits in four counties - centered in Tuolumne and Mariposa, extending north and east to Mono and south to Madera County. Designated a World Heritage Site in 1984, Yosemite is internationally recognized for its granite cliffs, waterfalls, clear streams, giant sequoia groves, lakes, mountains, meadows, glaciers, and biological diversity. Almost 95 percent of the park is designated wilderness. Yosemite is one of the largest and least fragmented habitat blocks in the Sierra Nevada, and the park supports a diversity of plants and animals.\n                    </Text>\n                </GridItem>\n                <GridItem>\n                    <Image src={yosemite1} alt=\"Yosemite\" className=\"yosemite-image\"/>\n                </GridItem>\n            </Grid>\n\n            <Text fontFamily=\"Raleway\" fontSize=\"4xl\" textAlign=\"center\" mt=\"100px\">Fun Facts about Yosemite</Text>           \n            <List  ml=\"auto\" mr=\"auto\" mt=\"15px\">\n                <Box className=\"yosemite-list-container\"> \n                    <ListItem className=\"fun-fact-item\" w=\"60%\" ml=\"auto\" mr=\"auto\">\n                        <ListIcon as={FaMountain} color=\"green.500\" />\n                        Yosemite might be our nation's 3rd national park, but it sparked the idea of national parks. Twenty-six years before it was a national park, President Lincoln signed the Yosemite Land Grant on June 30, 1864, protecting the Mariposa Grove and Yosemite Valley. It was the first time the government protected land because of its natural beauty so that people could enjoy it, and we're still benefiting from their foresight today. Thanks to John Muir's passionate writing to further protect the delicate ecosystem of the High Sierra, Yosemite later became a national park.\n                    </ListItem>\n                </Box>\n                <ListItem mt=\"10px\" className=\"fun-fact-item\" w=\"60%\" ml=\"auto\" mr=\"auto\">\n                    <ListIcon as={FaMountain} color=\"green.500\" />\n                    Yosemite's granite rock formations glow like fire at sunset. Sunlight plays amazing tricks at Yosemite -- illuminating El Capitan and Half Dome in brilliant reds and oranges. Horsetail Fall is famous for appearing to be on fire when it reflects the orange glow of sunset in mid- to late-February. It's a spectacular sight reminiscent of Yosemite's historic Firefall, which occurred nightly until 1968, when hotel operators would push campfire embers over Glacier Point to wow park goers.\n                </ListItem>\n                <Box className=\"yosemite-list-container\"> \n                    <ListItem mt=\"10px\" className=\"fun-fact-item\" w=\"60%\" ml=\"auto\" mr=\"auto\">\n                        <ListIcon as={FaMountain} color=\"green.500\" />\n                        The park's diverse landscape supports more than 400 species. While at Yosemite, look all around and you might spy one of the park's many amphibians, reptiles, birds and mammals looking back. One such animal is the rare Sierra Nevada red fox, which was spotted for the first time in nearly 100 years on a wildlife cam, roaming the high elevations of California's Sierra Nevada.\n                    </ListItem>\n                </Box>\n                <ListItem mt=\"10px\" className=\"fun-fact-item\" w=\"60%\" ml=\"auto\" mr=\"auto\">\n                    <ListIcon as={FaMountain} color=\"green.500\" />\n                    Yosemite is home to one of the tallest waterfalls in the world. At 2,425 feet, Yosemite Falls is one of tallest on the planet, but did you know, it's actually made up of three separate falls? Upper Yosemite Fall, the middle cascades and Lower Yosemite Fall makeup Yosemite Falls, which can be seen from numerous places around Yosemite Valley.\n                </ListItem>\n            </List>\n            <div id=\"waterfall-container\">\n                <canvas id=\"waterfall\"></canvas>\n            </div>\n\n\n\n        </Box>\n    )\n\n}\n\nexport default Yosemite","import { useEffect, useState } from \"react\"\nimport {FormControl, Select, FormLabel, Box, Button, Text} from '@chakra-ui/react'\n\nfunction ItineraryGenerator(){\n\n    //set state to save data for trails, lodging, and food\n    const [trailData, setTrailData] = useState([])\n    const [foodData, setFoodData] = useState([])\n    const [lodgingData, setLodgingData] = useState([])\n\n    //set state on input changes\n    const [allInputs, setAllInputs] = useState({})\n\n    //set state on errors\n    const [errors, setErrors] = useState([])\n\n    //fetch the data for trails, lodging, and food\n    useEffect(()=> {\n        fetch('/trails')\n        .then(res => res.json())\n        .then(data => setTrailData(data))\n\n        fetch('/foods')\n        .then(res => res.json())\n        .then(data => setFoodData(data))\n\n        fetch('/lodgings')\n        .then(res => res.json())\n        .then(data => setLodgingData(data))\n\n    },[])\n\n    function handleItineraryInput(e){\n        setAllInputs({...allInputs, [e.target.name]: e.target.value})\n    }\n\n    function handleItinerarySubmit(e){\n        e.preventDefault()\n        let filtered_food = foodData.filter(food => food.food_type === allInputs.food_type)\n        let filtered_trail = trailData.filter(trail => trail.difficulty === allInputs.difficulty)\n        setErrors([])\n        //if the food choice isn't available. Return it isn't available\n        if(filtered_food.length === 0){\n            setErrors([...errors, \"The food choice is not available\"])\n        }else if(filtered_trail.length === 0){\n            setErrors([...errors, \"The trail difficulty is not available\"])\n        }\n    }\n\n    console.log(allInputs)\n    console.log(errors)\n    return(\n        <>\n            <Box mt=\"40px\">      \n              <form onSubmit={handleItinerarySubmit}>\n                    <FormControl isRequired>\n                        <FormLabel>Restaurant Type</FormLabel>\n                        <Select name=\"food_type\" backgroundColor=\"white\" placeholder=\"Select the type of food you want\" onChange={handleItineraryInput}>\n                            <option value=\"African\">African</option>\n                            <option value=\"American\">American</option>\n                            <option value=\"Asian\">Asian</option>\n                            <option value=\"Bakery\">Bakery/Cafe</option>\n                            <option value=\"European\">European</option>\n                            <option value=\"Fast Food\">Fast Food</option>\n                            <option value=\"Latin American\">Latin American</option>\n                            <option value=\"Mediterranean\">Mediterranean</option>\n                        </Select>\n                    </FormControl>\n                    <FormControl isRequired>\n                        <FormLabel>Trail Difficulty</FormLabel>\n                        <Select name=\"difficulty\" backgroundColor=\"white\" placeholder=\"Select the hike difficulty\" onChange={handleItineraryInput}>\n                            <option value=\"Easy\">Easy</option>\n                            <option value=\"Medium\">Medium</option>\n                            <option value=\"Hard\">Hard</option>\n                            <option value=\"Extremely Hard\">Extremely Hard</option>\n                        </Select>\n                    </FormControl>\n                    {errors ? errors.map((error,index) => {\n                        return <Text key={index} color=\"red\">{error}</Text>\n                    }) : null}\n                    <Button type=\"submit\">Submit</Button>\n                </form>\n            </Box>\n        </>\n    )\n}\n\nexport default ItineraryGenerator","import React, {useState} from 'react';\nimport './App.css';\nimport {ChakraProvider} from '@chakra-ui/react'\nimport NavBar from './components/NavBar'\nimport {Switch, Route} from 'react-router-dom'\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport TrailsContainer from './components/TrailsContainer'\nimport TrailPage from './components/TrailPage'\nimport NewTrailForm from './components/NewTrailForm';\nimport FoodContainer from './components/FoodContainer';\nimport FoodPage from './components/FoodPage'\nimport NewFoodForm from './components/NewFoodForm';\nimport LodgingContainer from './components/LodgingContainer';\nimport LodgingPage from './components/LodgingPage'\nimport NewLodgingForm from './components/NewLodgingForm';\nimport UserPage from './components/UserPage';\nimport About from './components/About';\nimport Yosemite from './components/Yosemite'\nimport ItineraryGenerator from './components/ItineraryGenerator';\n\nfunction App() {\n\n  //create a state to check if the user has logged in\n  //need to use local storage due to state being update on a refresh\n  //credit to James Coffman for the code below\n  const [isLoggedIn, setIsLoggedIn] = useState(()=> {\n    const logged = localStorage.getItem('loggedIn')\n    return logged===\"true\" ? true : false\n  })\n  \n  //handle changing the state of the local storage logged in value\n  function handleLSLoggedIn(val,id){\n    setIsLoggedIn(val)\n    //set a loggedIn tag to be true or false if logged in\n    val ? localStorage.setItem('loggedIn','true') : localStorage.setItem('loggedIn','false')\n    //set ID of user\n    val ? localStorage.setItem('id',id) : localStorage.removeItem('id')\n  }\n\n  \n  return (\n    <ChakraProvider>\n      <NavBar isLoggedIn={isLoggedIn} handleLSLoggedIn={handleLSLoggedIn}/>\n      <Switch>\n        <Route exact path = \"/about\">\n          <About />\n        </Route>\n        <Route exact path = \"/yosemite\">\n          <Yosemite />\n        </Route>\n        <Route exact path = \"/yosemite/lodging\">\n          <LodgingContainer />\n        </Route>\n        <Route exact path = \"/yosemite/lodging/new\">\n          <NewLodgingForm isLoggedIn={isLoggedIn}/>\n        </Route>\n        <Route exact path = \"/yosemite/lodging/:id\">\n          <LodgingPage isLoggedIn={isLoggedIn}/>\n        </Route>\n        <Route exact path = \"/yosemite/food\">\n          <FoodContainer />\n        </Route>\n        <Route exact path = \"/yosemite/food/new\">\n          <NewFoodForm isLoggedIn={isLoggedIn}/>\n        </Route>\n        <Route exact path = \"/yosemite/food/:id\">\n          <FoodPage isLoggedIn={isLoggedIn}/>\n        </Route>\n        <Route exact path = \"/yosemite/trails\">\n          <TrailsContainer />\n        </Route>\n        <Route exact path = \"/yosemite/trails/new\">\n          <NewTrailForm isLoggedIn={isLoggedIn}/>\n        </Route>\n        <Route exact path = \"/yosemite/trails/:id\">\n          <TrailPage isLoggedIn={isLoggedIn}/>\n        </Route>\n        <Route exact path = \"/login\">\n          <Login handleLSLoggedIn={handleLSLoggedIn}/>\n        </Route>\n        <Route exact path = \"/signup\">\n          <SignUp handleLSLoggedIn={handleLSLoggedIn}/>\n        </Route>\n        <Route exact path = \"/yosemite/itinerary\">\n          <ItineraryGenerator />\n        </Route>\n        <Route exact path = \"/me\">\n          <UserPage />\n        </Route>\n        <Route exact path=\"/\">\n            <About />\n        </Route>\n        <Route path=\"*\">\n          <h1>404 not found</h1>\n        </Route> \n      </Switch>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  // <React.StrictMode>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}